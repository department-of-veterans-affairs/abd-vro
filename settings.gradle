/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/6.7/userguide/multi_project_builds.html
 */


pluginManagement {
  repositories {
    mavenLocal()
    gradlePluginPortal()
    mavenCentral()
    maven {
      name = "starterBootPkgs"
      url = uri("https://maven.pkg.github.com/department-of-veterans-affairs/lighthouse-di-starter-boot")
      credentials(HttpHeaderCredentials) {
        name = "Authorization"
        value = "Bearer " + (System.getenv("GITHUB_ACCESS_TOKEN") ?: GITHUB_ACCESS_TOKEN)
      }
      authentication {
        register("header", HttpHeaderAuthentication)
      }
    }
    maven {
      name = "nexus"
      url = uri("https://tools.health.dev-developer.va.gov/nexus")
      credentials {
        String result = "unknown"
        result = System.getenv("NEXUS_USERNAME")
        username = !result ? "NEXUS_USERNAME_FIXME" : result;
        result = System.getenv("NEXUS_TOKEN")
        password = !result ? "NEXUS_TOKEN_FIXME" : result;
      }
    }
  }
}


dependencyResolutionManagement {
  repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      name = "starterBootPkgs"
      url = uri("https://maven.pkg.github.com/department-of-veterans-affairs/lighthouse-di-starter-boot")
      credentials(HttpHeaderCredentials) {
        name = "Authorization"
        value = "Bearer " + (System.getenv("GITHUB_ACCESS_TOKEN") ?: GITHUB_ACCESS_TOKEN)
      }
      authentication {
        register("header", HttpHeaderAuthentication)
      }
    }
    maven {
      name = "nexus"
      url = uri("https://tools.health.dev-developer.va.gov/nexus")
      credentials {
        String result = "unknown"
        result = System.getenv("NEXUS_USERNAME")
        username = !result ? "NEXUS_USERNAME_FIXME" : result;
        result = System.getenv("NEXUS_TOKEN")
        password = !result ? "NEXUS_TOKEN_FIXME" : result;
      }
    }
  }
}


rootProject.name = 'abd_vro'
include ':app'
include ':console'
include ':domain-rrd:api-controller'
include ':docs'
include ':db-init'
include ':postgres'
include ':persistence:model'
include ':scripts'
include ':service:provider'
include ':service:spi'
include ':service:db'
include ':domain-rrd:claim-model'
include ':shared:lib-camel-connector'
include ':service-python'
include ':service-python:assessclaimdc7101'
include ':service-python:assessclaimdc6602'
include ':service-python:pdfgenerator'
include ':service-python:featuretoggle'
include ':svc-bgs-api'
include ':svc-lighthouse-api'
include ':mocks:mock-shared'
include ':mocks:mock-bip-ce-api'
include ':mocks:mock-bip-claims-api'
include ':mocks:mock-mas-api'
include ':mocks:mock-lighthouse-api'
include ':mocks:mock-slack'
include ':domain-xample:xample-api-controller'
include ':domain-xample:xample-shared'
include ':domain-xample:xample-workflows'
include ':domain-xample:svc-xample-j'
if (startParameter.projectProperties.containsKey("enablePrototype")) {
  include ':service-python:assessclaimdc6602v2'
  include ':service-python:assessclaimdc6510'
  include ':service-python:assessclaimdc6522'
  include ':service-python:assessclaimcancer'
}
