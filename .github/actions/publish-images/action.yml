name: Publish images to GHCR
description: Builds, tags, and publish VRO's Docker images

inputs:
  access_token:
    description: 'GITHUB_ACCESS_TOKEN needed by Gradle to build VRO'
    type: string
    required: true
  image_prefix:
    description: 'The prefix for the image name, e.g., "dev_" or "" (no prefix)'
    type: string
    default: 'dev_'
  image_tag:
    description: 'The tag/version for the image, e.g., first 7 of the commit hash or "release-1.2.3"'
    type: string
    required: true
  ghcr_username:
    description: 'GHCR username'
    type: string
    required: true
  ghcr_password:
    description: 'GHCR password or access token'
    type: string
    required: true
  run_tests:
    description: 'Run test before publishing images'
    type: boolean
    default: true

outputs:
  images_list:
    description: 'list of URLs to published images'
    value: ${{ steps.published-images.outputs.images }}

runs:
  using: composite
  steps:
    # Run build-images action to set up build env before testing code
    - name: "Build the images"
      uses: ./.github/actions/build-images
      with:
        access_token: ${{ inputs.access_token }}

    - name: "Test code"
      if: inputs.run_tests
      shell: bash
      run: ./gradlew check -PGITHUB_ACCESS_TOKEN=${{ inputs.access_token }}

    - name: "Login to GitHub Container Registry"
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ inputs.ghcr_username }}
        password: ${{ inputs.ghcr_password }}

    - name: "Tag and push images using commit hash and `latest`"
      shell: bash
      run: |
        source scripts/image_vars.src
        for PREFIX in "${VAR_PREFIXES_ARR[@]}"; do
          GRADLE_IMG_NAME=$(getVarValue "${PREFIX}" _GRADLE_IMG)
          IMG_NAME="${{ inputs.image_prefix }}$(getVarValue "${PREFIX}" _IMG)"

          echo "Tagging '$GRADLE_IMG_NAME' as '$IMG_NAME:${{ inputs.image_tag }}' and '$IMG_NAME:latest'"
          docker tag "$GRADLE_IMG_NAME" "ghcr.io/${{ github.repository }}/${IMG_NAME}:${{ inputs.image_tag }}"
          docker tag "$GRADLE_IMG_NAME" "ghcr.io/${{ github.repository }}/${IMG_NAME}:latest"

          echo "Pushing all tags for image '$IMG_NAME'"
          docker push --all-tags "ghcr.io/${{ github.repository }}/${IMG_NAME}"
        done

    - name: "Published images list"
      id: published-images
      shell: bash
      run: |
        docker image list
        source scripts/image_vars.src
        echo "## Published images" >> $GITHUB_STEP_SUMMARY
        echo "images<<EOF" >> $GITHUB_OUTPUT
        for VAR_PREFIX in ${VAR_PREFIXES_ARR[@]}; do
          IMG_NAME=${{ inputs.image_prefix }}$(getVarValue "${VAR_PREFIX}" _IMG)
          GHCR_PATH="ghcr.io/${{ github.repository }}/${IMG_NAME}"
          echo "${GHCR_PATH}:${{ inputs.image_tag }}" >> $GITHUB_OUTPUT
          echo "* ${GHCR_PATH}:${{ inputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
        done
        echo "EOF" >> $GITHUB_OUTPUT
