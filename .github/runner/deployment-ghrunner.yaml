# Self-hosted GitHub Action runner
# Once the pod is up and running, it should be visible here in your repo:
# https://github.com/department-of-veterans-affairs/abd-vro-internal/runners
# This is needed to access LHDI's Hashicorp Vault b/c the runner must be in the VA network
# to access LHDI's Vault and have the VA's CA certs installed.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vro-runner
  labels:
    app: github-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: github-runner
  template:
    metadata:
      labels:
        app: github-runner
        sidecar.istio.io/inject: "false"
    spec:
      imagePullSecrets:
        - name: abd-vro-ghcr
      containers:
        - name: github-runner
          image: ghcr.io/department-of-veterans-affairs/abd-vro-internal/vro-ghrunner:latest
          imagePullPolicy: Always
          restartPolicy: Never
          # For debugging: spin & wait forever without running entrypoint script
          # command: [ "/bin/sh", "-c", "--" ]
          # args: [ "while true; do sleep 30; done;" ]
          env:
            # ORGANIZATION, REPOSITORY_NAME, RUNNER_LABEL, ACCESS_TOKEN are used to register
            # this runner with a repo.
            - name: ORGANIZATION
              value: "department-of-veterans-affairs"
            - name: REPOSITORY_NAME
              value: "abd-vro-internal"
            - name: RUNNER_LABEL
              # comma separated list of labels to associate with the runner; useful for specifying which runners to use
              # see deploy-secrets.yml GitHub workflow
              value: "vro-runner"
            - name: ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: github-access-token
                  key: GITHUB_ACCESS_TOKEN
            # The following are used by set-k8s-secrets.sh
            - name: TARGET_ENV
              value: $TARGET_ENV
            - name: KUBE_CONFIG
              value: $KUBE_CONFIG
            - name: VAULT_TOKEN
              # TODO: Is there a more secure way to pass this token to the container?
              valueFrom:
                secretKeyRef:
                  name: devops
                  key: VAULT_TOKEN
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
