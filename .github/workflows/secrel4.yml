name: "SecRel 4"

on:
  # Trigger on every code push to main and develop branches
  push:
    branches: [ main, qa, develop ]

  # Trigger on all published GitHub Releases
  release:
    types: [ "created" ]

  # Allow manual runs
  workflow_dispatch:

env:
  TARGET_ENV: 'dev'
  RUN_TESTS: 'true'

jobs:
  publish-images:
    # only run for the internal repo
    if: github.repository == 'department-of-veterans-affairs/abd-vro-internal'
    outputs:
      vro-images: ${{ steps.publish-images.outputs.images_list }}
      target-env: ${{ env.TARGET_ENV }}
      run-tests: ${{ env.RUN_TESTS }}
    runs-on: ubuntu-latest
    steps:
      - name: "Determine target environment"
        run: |
          echo "ref_name: ${{ github.ref_name }}"
          GRADLE_TESTS=true
          case "${{ github.ref_name }}" in
            # main and sandbox are untested
            # main)    IMAGE_PREFIX="";;
            # sandbox) IMAGE_PREFIX=sandbox;;
            qa)      IMAGE_PREFIX=qa;;
            develop) IMAGE_PREFIX=dev;;
            *)       IMAGE_PREFIX=dev
                     GRADLE_TESTS=false
              ;;
          esac
          echo "TARGET_ENV=${IMAGE_PREFIX}" >> $GITHUB_ENV
          echo "RUN_TESTS=${GRADLE_TESTS}" >> $GITHUB_ENV

      - name: "DEBUG step"
        run: |
          echo "TARGET_ENV: ${{ env.TARGET_ENV }}"
          echo "RUN_TESTS: ${{ env.RUN_TESTS }}"

      - name: "Checkout source code"
        uses: actions/checkout@v3

      # we are using the GitHub actor and token below instead of the PAT
      # due to a signing issue in SecRel 4. for more details see
      # https://lighthouseva.slack.com/archives/C03UA9MV1EH/p1671643846200589?thread_ts=1671481495.084579&cid=C03UA9MV1EH

      - name: "Publish ${{ env.TARGET_ENV }} images to GHCR"
        id: publish-images
        uses: ./.github/actions/publish-images
        with:
          target_env: ${{ env.TARGET_ENV }}
          access_token: ${{ secrets.ACCESS_TOKEN_GRADLE_BUILD }}
          ghcr_username: ${{ github.actor }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}
          run_tests: ${{ env.RUN_TESTS }}

  images-for-secrel:
    runs-on: ubuntu-latest
    needs:
      - publish-images
    outputs:
      all-images: ${{ steps.append-images.outputs.all-images }}
    steps:
      - name: "Append 3rd-party images"
        id: append-images
        run: |
          echo "all-images<<EOF" >> $GITHUB_OUTPUT
          echo "${{ needs.publish-images.outputs.vro-images }}" >> $GITHUB_OUTPUT
          MANUAL_IMGS_ARRAY=( vro-rabbitmq:latest vro-redis:latest )
          for MANUAL_IMAGE in ${MANUAL_IMGS_ARRAY[@]}; do
            # SecRel will not sign images outside the scope of the repository that's calling SecRel,
            # so the image must exist in abd-vro-internal
            echo "ghcr.io/department-of-veterans-affairs/abd-vro-internal/${MANUAL_IMAGE}" >> $GITHUB_OUTPUT
          done
          echo "EOF" >> $GITHUB_OUTPUT

  debug-job:
    runs-on: ubuntu-latest
    needs: [publish-images, images-for-secrel]
    steps:
      - name: show vars
        run: |
          echo "TARGET_ENV: ${{ needs.publish-images.outputs.target-env }}"
          echo "RUN_TESTS: ${{ needs.publish-images.outputs.run-tests }}"
          echo "ref_name: ${{github.ref_name}}"
          echo "publish-images: ${{ needs.publish-images.outputs.vro-images }}"
          echo "all-images: ${{ needs.images-for-secrel.outputs.all-images }}"

  secrel:
    # only run for the internal repo -- SecRel doesn't work on public repos
    if: github.repository == 'department-of-veterans-affairs/abd-vro-internal'
    name: SecRel Pipeline
    needs: [publish-images, images-for-secrel]
    uses: department-of-veterans-affairs/lighthouse-tornado-secrel-pipeline/.github/workflows/pipeline.yml@v4.0.0
    with:
      config-file: .github/secrel/config4.yml
      images: ${{ needs.images-for-secrel.outputs.all-images }}
    secrets: inherit
