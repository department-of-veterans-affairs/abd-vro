# Delete this once codeql-analysis.yml is working
name: "PR: CodeQL security scan"

on:
  pull_request:
    branches: [main, develop, domain-*]
    # Limit to certain PR event types since this action is slow
    types: [ready_for_review, review_requested]

  # When changes are pushed to special branches
  # Branch `develop` and `domain-*` are handled by continuous-integration.yml, which calls this workflow
  push:
    branches: [main]

  # In case vulnerability checks are updated
  schedule:
    - cron: "30 12 * * 1"

  # Allow manual triggering
  workflow_dispatch:

  # Trigger when called by another GitHub Action
  workflow_call:

concurrency:
  group: codeql-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java, python
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: Set up VRO build env
        uses: ./.github/actions/setup-vro

      # Run a build in case it results in new files being generated but don't test since that is done in a different workflow.
      # https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/customizing-code-scanning#configuring-code-scanning-for-compiled-languages
      - name: Build VRO without testing
        run: ./gradlew build -x test -x check

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
