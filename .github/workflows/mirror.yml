name: Mirroring

on:
  pull_request:
    branches: [ main, qa, develop ]
    # Limit to certain PR event types since this action could trigger actions to run in the mirror repo
    types: [opened, synchronize, reopened, ready_for_review, review_requested]

  # When changes are pushed to special branches
  push:
    branches: [ main, qa, develop ]

  # When a Git reference (Git branch or tag) is created or deleted
  create:
  delete:

  # Allow manual triggering
  workflow_dispatch:

# Ensures that only one mirror task will run at a time.
concurrency:
  group: git-mirror

jobs:
  to_internal_repo:
    # only run this job in the abd-vro repo
    if: github.repository == 'department-of-veterans-affairs/abd-vro'
    runs-on: ubuntu-latest
    steps:
      - name: Send message to Slack API
        id: notify-slack
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: C04CA47HV96
          slack-text: "Hello! :wave: Event ${{ github.event_name }} in ${{ github.repository }} ðŸ¤“"
      - name: Slack result
        run: echo "The result was ${{ steps.notify-slack.outputs.slack-result }}"

      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: yesolutions/mirror-action@master
        with:
          REMOTE: ssh://git@github.com/department-of-veterans-affairs/abd-vro-internal.git
          GIT_USERNAME: ${{ github.actor }}
          GIT_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          GIT_SSH_NO_VERIFY_HOST: "true"

      - name: Send Thread Message
        id: notify-slack-thread
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.channel }}
          slack-text: This is a thread reply
          slack-optional-thread_ts: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.message.ts }}
          #slack-optional-reply_broadcast: true # To broadcast thread reply in channel

      - name: Send "Send Thread Message" Result
        run: echo "Data - ${{ steps.notify-slack-thread.outputs.slack-result }}"

      - name: Send Slack Reaction To Message
        id: notify-slack-react
        uses: archive/github-actions-slack@v2.0.0
        with:
          slack-function: send-reaction
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.channel }}
          slack-emoji-name: heavy_check_mark
          slack-message-timestamp: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.message.ts }}

      - name: Send Slack Reaction To Message Result
        if: always()
        run: echo "Data - ${{ steps.notify-slack-react.outputs.slack-result }}"
