name: Build

on:
  # Trigger on all pull requests
  pull_request:
    branches:
      - "*"

  # Trigger when called by another GitHub Action
  workflow_call:
    secrets:
      ACCESS_TOKEN:
        required: true

  # Allow manual triggering
  workflow_dispatch:

env:
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  build-and-test-core:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3.8
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # Install all dependencies

      - name: Install Java build dependencies
        uses: ./.github/actions/install-build-dependencies

      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: "pip"

      - name: "Install Python dependencies for DC7101"
        run: pip install -r service-python/assessclaimdc7101/src/requirements.txt

      - name: "Install Python dependencies for PDF Generator"
        run: pip install -r service-python/pdfgenerator/src/requirements.txt

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle
          restore-keys: |
            v1-dependencies-${{ hashFiles('build.gradle') }}
            v1-dependencies-
          key: v1-dependencies-${{ hashFiles('build.gradle') }}

#      - name: Setup gradle
#        run: ./gradlew dependencies

      # Build and test

      - name: Build and test Java code
        run: ./gradlew build check -PGITHUB_ACCESS_TOKEN=${{ env.GITHUB_ACCESS_TOKEN }}

      - name: "Build and test Python code with test coverage report"
        run: cd service-python && python -m pytest --cov-report term-missing --cov

  build-docker-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Build
        run: |
          echo "GITHUB_ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }}" > all-secrets.txt
          docker build . --no-cache --progress=plain --secret id=all-secrets,src=all-secrets.txt
          docker build -f ./db-init/src/docker/Dockerfile .
          rm all-secrets.txt
#        working-directory: ./code

  build-docker-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Build
        run: |
          docker build -f ./db-init/src/docker/Dockerfile .
#        working-directory: ./code

  validate-new-app-generation:
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Install cookiecutter
        run: pip install cookiecutter==1.7.3

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Compare changes in template
        run: ./gradlew ccdiff -PGITHUB_ACCESS_TOKEN=${{ env.GITHUB_ACCESS_TOKEN }} --info --stacktrace
