name: Deploy QA images

on:
  push:
    branches: [ qa ]

  # Allow manual triggering
  workflow_dispatch:

  workflow_call:
    secrets:
      DEV_KUBE_CONFIG:
        required: true

env:
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  COMMIT_SHA: ${{ github.sha }}
  DEV_KUBE_CONFIG: ${{ secrets.DEV_KUBE_CONFIG }}
  TARGET_ENV: "qa"

jobs:
  deploy-images:
    # only run this job in the abd-vro repo
    if: github.repository == 'department-of-veterans-affairs/abd-vro'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Build, test, and publish ${{ env.TARGET_ENV }} images to GHCR"
        uses: ./.github/actions/publish-images
        with:
          target_env: ${{ env.TARGET_ENV }}
          access_token: ${{ secrets.ACCESS_TOKEN }}
          ghcr_username: ${{ secrets.USERNAME }}
          ghcr_password: ${{ secrets.ACCESS_TOKEN }}

      - name: "Cleanup images locally"
        run: |
          docker rmi "ghcr.io/${{ github.repository }}/vro-rabbitmq:3"

          source scripts/image_vars.src
          for PREFIX in ${VAR_PREFIXES_ARR[@]}; do
            IMG_NAME=${{ env.TARGET_ENV }}_$(getVarValue ${PREFIX} _IMG)
            echo "Clean up image with tags '$IMG_NAME:${COMMIT_SHA:0:7}' and '${IMG_NAME}:latest'"
            docker rmi "ghcr.io/${{ github.repository }}/${IMG_NAME}:${COMMIT_SHA:0:7}" \
                       "ghcr.io/${{ github.repository }}/${IMG_NAME}:latest"
          done

      - name: "Set up kube config"
        run: |
          mkdir ~/.kube
          echo -n "${{ secrets.DEV_KUBE_CONFIG }}" | base64 -d > ~/.kube/config

      - name: "Deploy to ${{ env.TARGET_ENV }} env"
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
        run: |
          ./scripts/deploy-app.sh ${{ env.TARGET_ENV }} ${COMMIT_SHA:0:7}
