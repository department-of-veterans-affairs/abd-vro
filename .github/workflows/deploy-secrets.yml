name: "7. (Internal) Deploy secrets from Vault"

on:
  # manual run
  workflow_dispatch:
    inputs:
      target_env:
        description: 'Target LHDI environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - qa
        - sandbox
        - prod-test
        - prod

      publish_new_image:
        description: 'Publish an updated runner image? (Rarely needed)'
        required: true
        default: false
        type: boolean

jobs:
  publish_image:
    name: "Publish GitHub runner image"
    # The image is expected to be in the internal repo
    if: inputs.publish_new_image && (github.repository == 'department-of-veterans-affairs/abd-vro-internal')
    runs-on: ubuntu-latest
    steps:
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Build image"
        run: |
          docker build -f .github/runner/Dockerfile -t ghcr.io/${{ github.repository }}/vro-ghrunner:latest .

      - name: "Publish image"
        run: |
          docker push ghcr.io/${{ github.repository }}/vro-ghrunner:latest

  gh_runner:
    name: "Starting GitHub runner in ${{ inputs.target_env }}"
    needs: publish_image
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: "Set up kube config"
        run: |
          mkdir ~/.kube
          case "${{ inputs.target_env }}" in
            dev|qa|sandbox) KUBE_CONFIG="${{ secrets.DEV_KUBE_CONFIG }}";;
            prod-test|prod) KUBE_CONFIG="${{ secrets.PROD_KUBE_CONFIG }}";;
          esac
          echo -n "${KUBE_CONFIG}" | base64 -d > ~/.kube/config
          chmod go-rwx ~/.kube/config

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Deploy runner"
        run: |
          kubectl -n va-abd-rrd-${{ inputs.target_env }} apply -f .github/runner/deployment-ghrunner.yaml
