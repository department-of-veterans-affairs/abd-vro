name: "5. (Internal) Deploy secrets from Vault"
run-name: "${{inputs.target_env}}: Deploying secrets"

on:
  schedule:
    # Run every day at 18:00 UTC
    # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07
    - cron: '0 18 * * *'

  # manual run
  workflow_dispatch:
    inputs:
      target_env:
        description: 'Target LHDI environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - qa
        - sandbox
        - prod-test
        - prod

      publish_new_image:
        description: 'Publish an updated runner image before deploying secrets? (only needed if set-k8s-secrets.sh was updated)'
        required: true
        default: false
        type: boolean

jobs:
  publish_image:
    name: "Publish GitHub runner image"
    if: ${{ inputs.publish_new_image || false }} && (github.repository == 'department-of-veterans-affairs/abd-vro-internal')
    runs-on: ubuntu-latest
    steps:
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Build image"
        run: |
          docker build -f .github/runner/Dockerfile-set-secrets \
            -t ghcr.io/${{ github.repository }}/vro-set-secrets:$(date '+%Y-%m-%d') \
            -t ghcr.io/${{ github.repository }}/vro-set-secrets:latest \
            .github/runner

      - name: "Publish image"
        run: |
          docker push ghcr.io/${{ github.repository }}/vro-set-secrets:$(date '+%Y-%m-%d')
          docker push ghcr.io/${{ github.repository }}/vro-set-secrets:latest

  gh_runner:
    name: "Start GitHub runner to set ${{ inputs.target_env }} secrets"
    needs: publish_image
    if: always() && (github.repository == 'department-of-veterans-affairs/abd-vro-internal')
    runs-on: ubuntu-latest
    steps:
      - name: "Set up kube config for dev env"
        run: |
          mkdir ~/.kube
          echo -n "${{ secrets.DEV_KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          chmod go-rwx ~/.kube/config

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Deploy runner (in dev)"
        run: |
          export TARGET_ENV=${{ inputs.target_env || 'dev' }}
          case "$TARGET_ENV" in
            dev|qa|sandbox) export KUBE_CONFIG_CLUSTER_KEY=DEV_KUBE_CONFIG;;
            prod-test|prod) export KUBE_CONFIG_CLUSTER_KEY=PROD_KUBE_CONFIG;;
          esac
          # The runner is deployed to dev since it doesn't require signed images.
          # KUBE_CONFIG_CLUSTER_KEY enables the runner to set secrets in other clusters.

          envsubst < .github/runner/pod-set-secrets.yaml | kubectl -n va-abd-rrd-dev replace --force -f -

      - name: "Wait for pod deployment"
        run: |
          POD_STATUS="Pending"
          while [ "$POD_STATUS" == "Pending" ]; do
            sleep 10
            POD_STATUS=$(kubectl -n va-abd-rrd-dev get pod vro-set-secrets-dev -o json | jq -r '.status.phase')
            echo "POD_STATUS=$POD_STATUS  Waiting for pod to deploy..."
          done

      - name: "Check pod final status"
        run: |
          until [ "$POD_STATUS" == "Failed" ] || [ "$POD_STATUS" == "Succeeded" ]; do
            POD_STATUS=$(kubectl -n va-abd-rrd-dev get pod vro-set-secrets-dev -o json | jq -r '.status.phase')
            echo "POD_STATUS=$POD_STATUS"
            sleep 30
          done

          if [ "$POD_STATUS" == "Failed" ]; then
            exit 2
          fi

          if kubectl -n va-abd-rrd-dev  logs vro-set-secrets-dev | grep ERROR; then
            exit 3
          fi
