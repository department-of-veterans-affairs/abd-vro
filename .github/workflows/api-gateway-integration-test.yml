name: "CI: API Gateway integration test"

on:
  # Allow manual triggering
  workflow_dispatch:

  # Allow being called by another GitHub Action
  workflow_call:

concurrency:
  group: apiGatewayIntegrationTest-${{ github.ref }}

env:
  COMPOSE_PROFILES: ""

jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Build the images"
        uses: ./.github/actions/build-images

      - name: "Start the containers"
        run: |
          source scripts/setenv.sh
          export -p | sed 's/declare -x //'

          COMPOSE_PROFILES="gateway" ./gradlew :dockerComposeUp
          ./gradlew :app:dockerComposeUp
          
          # Run CC:
          ./gradlew :domain-cc:dockerComposeUp
          
          # Run Xample:
          ./gradlew :domain-xample:dockerComposeUp

      - name: "Wait for VRO to be ready"
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:8111/actuator/health'
          responseCode: 200
          # Retry every 2 seconds
          interval: 2000
          # Quit after 60 seconds
          timeout: 60000

      - name: "Wait for API Gateway to be ready"
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:8060/'
          responseCode: 200
          # Retry every 2 seconds
          interval: 2000
          # Quit after 60 seconds
          timeout: 60000

      - name: "Swagger UI - Request"
        id: "swaggerUI"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:8060/webjars/swagger-ui/index.html"
          method: "GET"
          accept: 200

      - name: "Swagger Config - Request"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:8060/v3/api-docs/swagger-config"
          method: "GET"
          accept: 200

      - name: "VRO API Docs- Request"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:8060/abd-vro/v3/api-docs"
          method: "GET"
          accept: 200

      - name: "VRO APP Docs- Request"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:8060/vro-app/v3/api-docs"
          method: "GET"
          accept: 200

      - name: "CC API Docs- Request"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:8060/contention-classification/openapi.json"
          method: "GET"
          accept: 200

      - name: "API Gateway Rest Controller GET /hello - Request"
        id: "apiGatewayHello"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:8060/hello"
          method: "GET"
          accept: 200
          log-response: true

      # API Gateway Endpoint Tests
      - name: "API Gateway Rest Controller GET /hello - Validate Response"
        run: |
          # Validate Response: 
          if [ "${{ fromJson(steps.apiGatewayHello.outputs.response).data }}" != "Hi!"]; then
            echo "Unexpected Response: ${{ steps.apiGatewayHello.outputs.response }}"
            exit 10
          else 
            echo "Expected Response Received"
          fi

      # App API Endpoint Tests
      - name: "VRO App xample POST - Request"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:8060/vro-app/v3/xample-resource"
          method: "POST"
          body: '{"resourceId":"20230706","diagnosticCode":"J"}'
          accept: 201

      - name: "Clean shutdown of all containers"
        if: always()
        shell: bash
        run: |
          docker ps
          COMPOSE_PROFILES="all" ./gradlew dockerComposeDown
