name: "CI: SVC BGS API integration test"

on:
  # Allow manual triggering
  workflow_dispatch:

  # Allow being called by another GitHub Action
  workflow_call:

concurrency:
  group: svcBgsApiIntegrationTest-${{ github.ref }}

env:
  COMPOSE_PROFILES: "svc"

jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Build the images"
        uses: ./.github/actions/build-images

      - name: "Start the containers"
        run: |
          source scripts/setenv.sh
          export -p | sed 's/declare -x //'
          
          # create basic auth token for RabbitMQ and export to github environment
          BASIC_AUTH=`echo "${RABBITMQ_PLACEHOLDERS_USERNAME}:${RABBITMQ_PLACEHOLDERS_USERPASSWORD}" | base64`
          echo "RABBITMQ_BASIC_AUTH=${BASIC_AUTH}" >> $GITHUB_ENV

          ./gradlew :dockerComposeUp
          ./gradlew :app:dockerComposeUp

      - name: "Wait for RabbitMQ to be ready"
        uses: indiesdev/curl@v1.1
        with:
          url: 'http://localhost:15672/api/vhosts'
          method: "GET"
          basic-auth-token: '${{env.RABBITMQ_BASIC_AUTH}}'
          accept: 200
          # Retry every 2 seconds
          timeout: 2000
          # Quit after 60 seconds
          retries: 30

      - name: "Send Message to RabbitMQ"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:15672/api/exchanges/%2F/bgs-api/publish"
          method: "POST"
          basic-auth-token: '${{env.RABBITMQ_BASIC_AUTH}}'
          headers: '{"accept":"application/json","content-type":"application/json"}'
          body: '{"properties":{"delivery_mode":1,"reply_to":"response","correlation_id":"1234","headers":{}},"routing_key":"add-note","payload":"{\"veteranNote\":\"test\",\"veteranParticipantId\":111}","payload_encoding":"string"}'
          accept: 200
          retries: 3
          log-response: true

      - name: "Get Message from RabbitMQ and Validate"
        uses: indiesdev/curl@v1.1
        with:
          url: "http://localhost:15672/api/queues/%2f/response/get"
          method: "POST"
          basic-auth-token: '${{env.RABBITMQ_BASIC_AUTH}}'
          headers: '{"accept":"application/json","content-type":"application/json"}'
          body: '{"count":1,"ackmode":"ack_requeue_true","encoding":"auto"}'
          accept: 200
          retries: 3
          log-response: true

      - name: "Clean shutdown of all containers"
        if: always()
        shell: bash
        run: |
          docker ps
          COMPOSE_PROFILES="all" ./gradlew dockerComposeDown
