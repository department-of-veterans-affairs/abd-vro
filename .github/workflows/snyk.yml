name: Snyk scan

on:
  pull_request:
    branches: [main, develop]
    # Limit to certain PR event types since this action is slow
    types: [ready_for_review, review_requested]

  # When changes are pushed to special branches
  push:
    branches: [main, develop]

  # Allow manual triggering
  workflow_dispatch:

env:
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: snyk/actions/setup@master

      - name: "Set up VRO build env"
        uses: ./.github/actions/setup-vro

# https://support.snyk.io/hc/en-us/articles/360015552617-Which-projects-must-be-built-before-testing-with-CLI-
# says Gradle projects don't need to be explicitly built
#      - name: "Build Java code"
#        run: ./gradlew build

      - name: "Snyk test"
        run: snyk test --all-projects --sarif-file-output=snyk.sarif --severity-threshold=medium
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: "Build Docker images"
        run: ./gradlew docker -PGITHUB_ACCESS_TOKEN=${{ env.GITHUB_ACCESS_TOKEN }}
      - name: "Snyk scan images"
        run: |
          function snyk-image(){
            snyk container test va/abd_vro-$1:latest --file=./${2:-$1}/src/docker/Dockerfile --severity-threshold=medium --sarif-file-output=snyk-$1.sarif
          }
          snyk-image app || echo "Alerts found"
          snyk-image postgres || echo "Alerts found"
          snyk-image db-init || echo "Alerts found"
          snyk-image service-data-access || echo "Alerts found"
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

#      - name: "Upload to GitHub Code Scanning"
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: snyk.sarif
