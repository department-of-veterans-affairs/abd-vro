name: Publish 3rd-party image

# SecRel will not sign images outside the scope of the repository that's calling SecRel,
# so the image must exist in abd-vro-internal for SecRel to sign the images (required for sandbox and prod environments).
# Run this in action in both abd-vro and abd-vro-internal repos.

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name of the image to publish, e.g., rabbitmq'
        required: true
        type: string
      image_tag:
        description: 'Tag/Version of the image to publish, e.g., 3'
        required: true
        type: string

env:
  # Add prefix to avoid uncertainty of which image is being used
  TARGET_IMAGE: "vro-${{ inputs.image_name }}"
  # Target path where the image will be pushed, i.e., to GHCR for the current repo
  GHCR_PATH: "ghcr.io/${{ github.repository }}/vro-${{ inputs.image_name }}"

  # Id for the #benefits-vro-devops Slack channel
  SLACK_CHANNEL: C04CA47HV96

jobs:
  publish-image:
    runs-on: ubuntu-latest
    steps:
    - name: "Login to GitHub Container Registry"
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: "Tag and push images using commit hash and `latest`"
      shell: bash
      run: |
        docker pull "${{ inputs.image_name }}:${{ inputs.image_tag }}"
        echo "# Publishing image ${{ inputs.image_name }}:${{ inputs.image_tag }} to ${{ env.GHCR_PATH }} and also tagged as 'latest'"
        docker tag "${{ inputs.image_name }}:${{ inputs.image_tag }}" "${{ env.GHCR_PATH }}:${{ inputs.image_tag }}"
        docker tag "${{ inputs.image_name }}:${{ inputs.image_tag }}" "${{ env.GHCR_PATH }}:latest"
        docker push --all-tags "${{ env.GHCR_PATH }}"

  notify_push:
    runs-on: ubuntu-latest
    steps:
      - name: "Notify Slack"
        id: notify-slack
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: "`${{ github.workflow }}` by `${{ github.triggering_actor }}` \n\
            Published 3rd-party image to `${{ env.GHCR_PATH }}`\n\
            Check for the package in <https://github.com/orgs/department-of-veterans-affairs/packages?repo_name=${{ github.event.repository.name }}|GHCR>\n\
            See thread :thread: to complete any remaining steps..."

      - name: "Post follow-on actions in Slack thread"
        # Post in thread to reduce clutter in Slack
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-optional-thread_ts: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.message.ts }}
          slack-text: "If this is a new image (i.e., not just a different version), you must do the following:\n\
            1. Verify that \
               <https://github.com/${{ github.repository }}/pkgs/container/${{ github.event.repository.name }}%2F${{ env.TARGET_IMAGE }}|the package> \
               is associated with repo `${{ github.repository }}` and is set to `Inherit access from source repository` as instructed by \
               <https://animated-carnival-57b3e7f5.pages.github.io/starterkits/java/development-guide/#changing-published-package-visibility|LHDI doc>. \
               Also see <https://github.com/department-of-veterans-affairs/abd-vro/wiki/Docker-containers#packages|VRO wiki docs>\n\
            2. Add image to the `MANUAL_IMGS_ARRAY` in `.github/workflows/secrel4.yml`\n\
            3. Create a Helm configuration for the service; mimic files in `helm-service-* folders`\n\
            4. Create and test `scripts/deploy-${{ inputs.image_name }}.sh`\n"
