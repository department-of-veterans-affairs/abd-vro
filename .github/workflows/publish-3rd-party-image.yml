name: "5. (Internal) Publish 3rd-party image"
run-name: "Publish image: ${{inputs.target_image_name}} ${{inputs.image_tag}}"

# SecRel will not sign images outside the scope of the repository that's calling SecRel,
# so the image must exist in abd-vro-internal for SecRel to sign the images (required for sandbox and prod environments).
# Run this in action in both abd-vro and abd-vro-internal repos.

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name of the image to pull, e.g., bitnami/rabbitmq'
        required: true
        type: string
      image_tag:
        description: 'Tag/Version of the image to pull, e.g., 3'
        required: true
        type: string
      target_image_name:
        description: 'Desired image name to publish, replacing "/", e.g., bitnami-rabbitmq; ("mirror-" will be added as a prefix)'
        required: true
        type: string

env:
  # Add prefix to be clear that we're not using the original image
  TARGET_IMAGE: "mirror-${{ inputs.target_image_name }}"
  # Target path where the image will be pushed, i.e., to GHCR for the current repo
  GHCR_PATH: "ghcr.io/${{ github.repository }}/mirror-${{ inputs.target_image_name }}"

  # Id for the #benefits-vro-devops Slack channel
  SLACK_CHANNEL: C04CA47HV96

jobs:
  publish-image:
    # only run for the internal repo since the images don't need to be in the public repo
    if: github.repository == 'department-of-veterans-affairs/abd-vro-internal'
    outputs:
      published-images: ${{ steps.docker-push.outputs.images_list }}
    runs-on: ubuntu-latest
    steps:
    - name: "Login to GitHub Container Registry"
      uses: docker/login-action@v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: "Publish images using tags '${{ inputs.image_tag }}'"
      id: docker-push
      shell: bash
      run: |
        docker pull "${{ inputs.image_name }}:${{ inputs.image_tag }}"
        echo "# Publishing image ${{ inputs.image_name }}:${{ inputs.image_tag }} to ${{ env.GHCR_PATH }}"

        docker tag "${{ inputs.image_name }}:${{ inputs.image_tag }}" "${{ env.GHCR_PATH }}:${{ inputs.image_tag }}"
        docker push "${{ env.GHCR_PATH }}:${{ inputs.image_tag }}"

        {
          echo "images_list<<EOF"
          echo "${{ env.GHCR_PATH }}:${{ inputs.image_tag }}"
          echo "EOF"
        } >> "$GITHUB_OUTPUT"

  secrel:
    name: SecRel Pipeline
    needs: publish-image
    uses: department-of-veterans-affairs/lighthouse-tornado-secrel-pipeline/.github/workflows/pipeline.yml@v4
    with:
      config-file: .github/secrel/config.yml
      images: ${{ needs.publish-image.outputs.published-images }}
    secrets: inherit

  notify_push:
    runs-on: ubuntu-latest
    steps:
      - name: "Notify Slack"
        id: notify-slack
        uses: archive/github-actions-slack@v2.9.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: "*${{ github.workflow }}* to `${{ env.GHCR_PATH }}:${{ inputs.image_tag }}` by `${{ github.triggering_actor }}` \n\
            Check for the package in <https://github.com/department-of-veterans-affairs/${{ github.event.repository.name }}/packages|GHCR>\n\
            See thread :thread: to complete any remaining steps..."

      - name: "Slack thread: Post follow-on TODO actions"
        # Post in thread to reduce clutter in Slack
        uses: archive/github-actions-slack@v2.9.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-optional-thread_ts: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.message.ts }}
          slack-text: "If this is a new image (i.e., not just a different version), you must do the following:\n\
            1. Verify that \
               <https://github.com/${{ github.repository }}/pkgs/container/${{ github.event.repository.name }}%2F${{ env.TARGET_IMAGE }}|the package> \
               is associated with repo `${{ github.repository }}` and is set to `Inherit access from source repository` as instructed by \
               <https://animated-carnival-57b3e7f5.pages.github.io/starterkits/java/development-guide/#changing-published-package-visibility|LHDI doc>; \
               also see <https://github.com/department-of-veterans-affairs/abd-vro/wiki/Docker-containers#packages|VRO wiki docs>.\n\
            2. Add it to the Helm configuration; mimic files under the `helm/charts` folders\n"
