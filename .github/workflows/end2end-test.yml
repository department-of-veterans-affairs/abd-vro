name: End to end test

on:
  # Trigger on all pull requests
  pull_request:
    branches:
      - "*"
  # Allow manual triggering
  workflow_dispatch:

env:
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  VRO_NON_PROD: true
  COMPOSE_PROJECT_NAME: vro
  LH_TOKEN_URL: https://sandbox-api.va.gov/oauth2/health/system/v1/token
  LH_ASSERTION_URL: https://deptva-eval.okta.com/oauth2/aus8nm1q0f7VQ0a482p7/v1/token
  LH_FHIR_URL: https://sandbox-api.va.gov/services/fhir/v0/r4
  LH_ACCESS_CLIENT_ID: ${{ secrets.LH_ACCESS_CLIENT_ID }}
  LH_PRIVATE_KEY: ${{ secrets.LH_PRIVATE_KEY }}
  POSTGRES_SUPER_USER: vro_super_user
  POSTGRES_SUPER_PASSWORD: vro_super_user_pw
  POSTGRES_SUPER_DB: vro_super_db
  POSTGRES_ADMIN_USER: vro_admin_user
  POSTGRES_ADMIN_PASSWORD: vro_admin_user_pw
  FLYWAY_TABLE: schema_history
  FLYWAY_TABLESPACE: pg_default
  RABBITMQ_PLACEHOLDERS_USERNAME: guest
  RABBITMQ_PLACEHOLDERS_USERPASSWORD: guest
  POSTGRES_USER: vro_user
  POSTGRES_PASSWORD: vro_user_pw
  POSTGRES_DB: vro
  POSTGRES_URL: jdbc:postgresql://postgres-service:5432/vro
  POSTGRES_SCHEMA: claims
  REDIS_PLACEHOLDERS_PASSWORD: vro_redis_password

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Set up VRO build env"
        uses: ./.github/actions/setup-vro

      - name: "Build the code"
        # unit tests are run in another workflow
        run: ./gradlew build -x test

      - name: "Build the images"
        run: ./gradlew docker

      - name: "Start the containers"
        run: ./gradlew :app:dockerComposeUp

      - name: "Sleep 10 seconds"
        # it appears app container is not immediately ready
        run: sleep 10

      - name: "Run the end to and tests"
        run: ./gradlew end2EndTest --info

      - name: "Clean docker container and images"
        run: ./gradlew dockerclean

      - name: "Clean docker volumes"
        run: ./gradlew dockermaintainerclean