name: "SecRel workflow"

on:
  # Trigger on every code push to main and develop branches
  push:
#    branches: [ main, qa, develop ]
    branches: [ testing-branch, secrel/927-slack-failure-notification ]

  # Trigger on all published GitHub Releases
  release:
    types: [ "created" ]

  # Trigger manually
  workflow_dispatch:

env:
  # If SecRel can't push signed images, revert to use `secrets.ACCESS_TOKEN` instead.
  # secrets.ACCESS_TOKEN_GRADLE_BUILD only has `read:packages` permission
  # while secrets.ACCESS_TOKEN has `repo` and `write:packages` permission
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN_GRADLE_BUILD }}
  # Id for the #benefits-vro-devops Slack channel
  SLACK_CHANNEL: C04CA47HV96
  # Default to failure messages
  DEPLOY_STATE_TEXT: ':redlight: SecRel scan failed! (ONLY A TEST- PLEASE IGNORE)'
  DEPLOY_STATE_EMOJI: 'x'
  JOB_STATUS: 'failed'

jobs:
  build-and-scan:
    # only run for the internal repo
    if: github.repository == 'department-of-veterans-affairs/abd-vro-internal'
    name: Tornado Pipeline
    runs-on: ubuntu-latest
    outputs:
      job_status: ${{ steps.job-status.outputs.job_status }}
#    secrets: inherit

    steps:
      - name: run secrel
#    uses: department-of-veterans-affairs/lighthouse-tornado-secrel-pipeline/.github/workflows/pipeline.yml@v3.2.0
#        uses: actions/checkout@v3
        run: exit 1 #0 is success, 1+ is failed
#    with:
#      config-file: .github/secrel/config.yml
      - name: set job status
        id: job-status
        run: echo "JOB_STATUS=success" >> $GITHUB_ENV

  notify-secrel-error:
    needs: build-and-scan
    runs-on: ubuntu-latest
    # only run for the internal repo
    if: always()
    steps:
      - name: debug
        uses: hmarr/debug-action@v2

      - name: otherdebug
        run: echo ${{ needs.build-and-scan.outputs.job_status }}

      - name: "Notify Slack on SecRel Failure"
        id: notify-slack
        uses: archive/github-actions-slack@v2.6.0
        if: ${{ needs.build-and-scan.outputs.job_status == 'failed' }} #  && github.repository == 'department-of-veterans-affairs/abd-vro-internal'
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          # slack-optional-thread_ts: ${{ needs.publish-images.outputs.slack-response-ts }}
          slack-text: "${{ env.DEPLOY_STATE_TEXT }} \n\
              ${{github.ref_type}} `${{github.ref_name}}` (`${{github.sha}}`), \n\
              caused by `${{github.event_name}}` triggered by `${{github.triggering_actor}}` ..."
