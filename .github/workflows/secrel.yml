name: "SecRel workflow"

on:
  # Trigger on every code push to main and develop branches
  push:
    branches: [ main, qa, develop ]

  # Trigger on all published GitHub Releases
  release:
    types: [ "created" ]

  # Trigger manually
  workflow_dispatch:

env:
  # If SecRel can't push signed images, revert to use `secrets.ACCESS_TOKEN` instead.
  # secrets.ACCESS_TOKEN_GRADLE_BUILD only has `read:packages` permission
  # while secrets.ACCESS_TOKEN has `repo` and `write:packages` permission
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN_GRADLE_BUILD }}

  # Id for the #benefits-vro-devops Slack channel
  SLACK_CHANNEL: C04CA47HV96
  DEPLOY_STATE_EMOJI: 'x'
  JOB_STATUS: 'failed'

jobs:
  build-and-scan:
    # only run for the internal repo
    if: github.repository == 'department-of-veterans-affairs/abd-vro-internal'
    name: Tornado Pipeline
    uses: department-of-veterans-affairs/lighthouse-tornado-secrel-pipeline/.github/workflows/pipeline.yml@v3.2.0
    with:
      config-file: .github/secrel/config.yml
    secrets: inherit

  notify-secrel-error:
    if: failure()
    needs: build-and-scan
    runs-on: ubuntu-latest

    steps:
      - name: "Notify Slack on SecRel Failure"
        id: notify-slack
        uses: archive/github-actions-slack@v2.6.0
        # only run for the internal repo
        if: ${{ github.repository == 'department-of-veterans-affairs/abd-vro-internal' }}
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: ":redlight: SecRel scan <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}|failed>! \n\
              ${{github.ref_type}} `${{github.ref_name}}` (`${{github.sha}}`), \n\
              caused by `${{github.event_name}}` triggered by `${{github.triggering_actor}}` ..."
