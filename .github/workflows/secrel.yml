name: "2. (Internal) SecRel workflow"

on:
  # Trigger on every code push to main and develop branches
  push:
    branches: [ main, qa, develop ]

  # Trigger on all published GitHub Releases
  release:
    types: [ "created" ]

  # Allow manual runs
  workflow_dispatch:
    inputs:
      image_prefix:
        description: 'Image prefix for the chosen branch. Choose `dev_` for deploys to dev and qa environments.'
        required: true
        default: 'dev_'
        type: choice
        options:
          - "dev_"
          - "(no prefix)"
      run_tests:
        description: "Run Gradle tests?"
        required: true
        type: boolean
        default: true
      run_secrel:
        description: "Run SecRel and sign images?"
        required: true
        type: boolean
        default: true

env:
  # Id for the #benefits-vro-devops Slack channel
  SLACK_CHANNEL: C04CA47HV96

jobs:
  publish-to-ghcr:
    # only run for the internal repo, where the images are published
    if: github.repository == 'department-of-veterans-affairs/abd-vro-internal'
    outputs:
      vro-images: ${{ steps.publish-images.outputs.images_list }}
      slack-response-ts: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.message.ts }}
      run-secrel: ${{ steps.image-props.outputs.run_secrel }}
    runs-on: ubuntu-latest
    steps:
      - name: "Determine image prefix and tag"
        id: image-props
        run: |
          echo "ref_name: ${{ github.ref_name }}"
          # Set defaults
          IMG_PREFIX="dev_"
          RUN_GRADLE_TESTS=true
          RUN_SECREL=true
          IMG_TAG=${GITHUB_SHA:0:7}

          # Change defaults if workflow was dispatched manually
          case "${{ github.event_name }}" in
            workflow_dispatch)
              [ "${{ inputs.image_prefix }}" == "(no prefix)" ] && IMG_PREFIX=""
              RUN_GRADLE_TESTS=${{ inputs.run_tests }}
              RUN_SECREL=${{ inputs.run_secrel }}
              ;;
          esac

          # Override some defaults depending on the branch
          case "${{ github.ref_name }}" in
            main)      IMG_PREFIX=""
                       ;;
            release-*) IMG_PREFIX=""
                       IMG_TAG="${{ github.ref_name }}"
                       ;;
            develop)   RUN_GRADLE_TESTS=false
                       ;;
          esac
          echo "image_prefix=${IMG_PREFIX}" >> $GITHUB_OUTPUT
          echo "image_tag=${IMG_TAG}" >> $GITHUB_OUTPUT
          echo "run_tests=${RUN_GRADLE_TESTS}" >> $GITHUB_OUTPUT
          echo "run_secrel=${RUN_SECREL}" >> $GITHUB_OUTPUT

      - name: "DEBUG"
        run: |
          echo "image_prefix: ${{ steps.image-props.outputs.image_prefix }}"
          echo "image_tag: ${{ steps.image-props.outputs.image_tag }}"
          echo "run_tests: ${{ steps.image-props.outputs.run_tests }}"

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Slack: workflow triggered"
        id: notify-slack
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: ":arrow_forward: \
            <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}|\
            SecRel running (#${{ github.run_number }})>: \
            Publishing images with prefix `${{ steps.image-props.outputs.image_prefix }}` \
            and tag `${{ steps.image-props.outputs.image_tag }}` \
            from ${{github.ref_type}} `${{github.ref_name}}`, \
            caused by `${{github.event_name}}` triggered by `${{github.triggering_actor}}` \
            (Run tests? ${{ steps.image-props.outputs.run_tests }})...\n"

      - name: "Publish ${{ steps.image-props.outputs.image_prefix }} images to GHCR"
        id: publish-images
        uses: ./.github/actions/publish-images
        with:
          image_prefix: "${{ steps.image-props.outputs.image_prefix }}"
          image_tag: "${{ steps.image-props.outputs.image_tag }}"
          access_token: ${{ secrets.ACCESS_TOKEN_GRADLE_BUILD }}
          ghcr_username: ${{ github.actor }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}
          run_tests: ${{ steps.image-props.outputs.run_tests }}

      - name: "Slack thread: Images published"
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-optional-thread_ts: ${{ fromJson(steps.notify-slack.outputs.slack-result).response.message.ts }}
          slack-text: ":panda_builder: Images published!"

  debug-job:
    runs-on: ubuntu-latest
    needs: publish-to-ghcr
    steps:
      - name: show vars
        run: |
          echo "ref_name: ${{github.ref_name}}"
          echo "vro-images: ${{ needs.publish-to-ghcr.outputs.vro-images }}"

  secrel:
    # only run for the internal repo -- SecRel doesn't work on public repos
    if: github.repository == 'department-of-veterans-affairs/abd-vro-internal' && needs.publish-to-ghcr.outputs.run-secrel == 'true'
    name: SecRel Pipeline
    needs: publish-to-ghcr
    # https://psychic-disco-c1251ea1.pages.github.io/pipeline/release_notes/v4.2.0/
    uses: department-of-veterans-affairs/lighthouse-tornado-secrel-pipeline/.github/workflows/pipeline.yml@v4
    with:
      config-file: .github/secrel/config.yml
      images: ${{ needs.publish-to-ghcr.outputs.vro-images }}
    secrets: inherit

  notify-secrel-error:
    needs: secrel
    if: always() && needs.secrel.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: "Slack: SecRel Failure"
        uses: archive/github-actions-slack@v2.6.0
        # only run for the internal repo
        if: ${{ github.repository == 'department-of-veterans-affairs/abd-vro-internal' }}
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: ":redlight: <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}|\
              SecRel scan (#${{ github.run_number }}) failed>! \n\
              ${{github.ref_type}} `${{github.ref_name}}` (`${{github.sha}}`), \n\
              caused by `${{github.event_name}}` triggered by `${{github.triggering_actor}}` ..."

  slack-final:
    needs: [ publish-to-ghcr, secrel]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: "Set status message"
        run: |
          URL=${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
          if [ "${{needs.publish-to-ghcr.result}}" == 'failure' ]; then
            echo "WORKFLOW_STATE_TEXT=:panda_blank: <$URL|Publishing> failed!" >> $GITHUB_ENV
            echo 'WORKFLOW_STATE_EMOJI=x' >> $GITHUB_ENV
          elif [ "${{needs.secrel.result}}" == 'failure' ]; then
            echo "WORKFLOW_STATE_TEXT=:panda_cop: <$URL|SecRel> failed!" >> $GITHUB_ENV
            echo 'WORKFLOW_STATE_EMOJI=x' >> $GITHUB_ENV
          elif [ "${{needs.secrel.result}}" == 'success' ]; then
            echo "WORKFLOW_STATE_TEXT=:panda-yay: SecRel passed and images signed!" >> $GITHUB_ENV
            echo 'WORKFLOW_STATE_EMOJI=panda-yay' >> $GITHUB_ENV
          elif [ "${{needs.publish-to-ghcr.result}}" == 'skipped' ]; then
            echo "WORKFLOW_STATE_TEXT=:black_square_for_stop: <$URL|Publishing> skipped" >> $GITHUB_ENV
            echo 'WORKFLOW_STATE_EMOJI=black_square_for_stop' >> $GITHUB_ENV
          elif [ "${{needs.publish-to-ghcr.outputs.run-secrel}}" == "true" ] && [ "${{needs.secrel.result}}" != 'success' ]; then
            echo "WORKFLOW_STATE_TEXT=:black_square_for_stop: <$URL|SecRel> ${{needs.secrel.result}}" >> $GITHUB_ENV
            echo 'WORKFLOW_STATE_EMOJI=black_square_for_stop' >> $GITHUB_ENV
          elif [ "${{needs.publish-to-ghcr.outputs.run-secrel}}" == "false" ] && [ "${{needs.publish-to-ghcr.result}}" == 'success' ]; then
            echo "WORKFLOW_STATE_TEXT=:heavy_check_mark: Run completed (without SecRel scans or signing images)" >> $GITHUB_ENV
            echo 'WORKFLOW_STATE_EMOJI=heavy_check_mark' >> $GITHUB_ENV
          else
            echo "WORKFLOW_STATE_TEXT=publish: ${{needs.publish-to-ghcr.result}}; secrel: ${{needs.secrel.result}}" >> $GITHUB_ENV
            echo 'WORKFLOW_STATE_EMOJI=shrug' >> $GITHUB_ENV
          fi

      - name: "Slack thread: Post final status"
        if: always()
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-optional-thread_ts: ${{ needs.publish-to-ghcr.outputs.slack-response-ts }}
          slack-text: ${{ env.WORKFLOW_STATE_TEXT }}
      - name: "Slack emoji: React success on top-level Slack notification"
        if: always()
        uses: archive/github-actions-slack@v2.6.0
        with:
          slack-function: send-reaction
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-message-timestamp: ${{ needs.publish-to-ghcr.outputs.slack-response-ts }}
          slack-emoji-name: ${{ env.WORKFLOW_STATE_EMOJI }}
