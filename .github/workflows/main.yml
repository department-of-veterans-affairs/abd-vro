name: Main

on:
  push:
    branches:
      - "*"

env:
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  COMMIT_SHA: ${{ github.sha }}

jobs:
  cis-benchmark-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Build image
        run: |
          ./gradlew docker

      - name: Run cis-benchmark tests
        run: |
          cd ..
          git clone https://github.com/docker/docker-bench-security.git
          cd docker-bench-security
          sh docker-bench-security.sh -c container_images -i abd_vro -e check_4_5

  build-and-test-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Java build dependencies
        uses: ./.github/actions/install-build-dependencies

      - name: Build and test docker image
        run: ./gradlew build check

  build-and-test-python:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3.8
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: "pip"

      - name: "DC7101: PIP Install"
        run: pip install -r service-python/assess_claim_dc7101/src/requirements.txt

      - name: "PDF Generator: PIP Install"
        run: pip install -r service-python/pdf_generator/src/requirements.txt

      - name: "Pytest: Code Coverage"
        run: cd service-python && python -m pytest --cov-report term-missing --cov

  publish-image:
    needs: [build-and-test-java, build-and-test-python]
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Build image
        run: |
          ./gradlew docker

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Tag images
        run: |
          docker tag va/abd_vro-app \
            "ghcr.io/${{ github.repository }}/abd_vro-app:${COMMIT_SHA:0:7}"
          docker tag va/abd_vro-db-init \
            "ghcr.io/${{ github.repository }}/abd_vro-db-init:${COMMIT_SHA:0:7}"
          docker tag va/abd_vro-assess_claim_dc7101 \
            "ghcr.io/${{ github.repository }}/abd_vro-assess_claim_dc7101:${COMMIT_SHA:0:7}"
          docker tag va/abd_vro-pdf_generator \
            "ghcr.io/${{ github.repository }}/abd_vro-pdf_generator:${COMMIT_SHA:0:7}"
          docker tag va/abd_vro-service-data-access \
            "ghcr.io/${{ github.repository }}/abd_vro-data-access:${COMMIT_SHA:0:7}"
          # Pull and tag these images to work around https://www.docker.com/increase-rate-limits/
          docker pull postgres:latest
          docker tag postgres:latest \
            "ghcr.io/${{ github.repository }}/abd_vro-postgres:latest"
          docker pull rabbitmq:3
          docker tag rabbitmq:3 \
            "ghcr.io/${{ github.repository }}/abd_vro-rabbitmq:3"

      - name: Push images
        run: |
          docker push "ghcr.io/${{ github.repository }}/abd_vro-app:${COMMIT_SHA:0:7}"
          docker push "ghcr.io/${{ github.repository }}/abd_vro-db-init:${COMMIT_SHA:0:7}"
          # Push the following images to work around https://www.docker.com/increase-rate-limits/
          docker push "ghcr.io/${{ github.repository }}/abd_vro-postgres:latest"
          docker push "ghcr.io/${{ github.repository }}/abd_vro-rabbitmq:3"
