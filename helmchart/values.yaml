# NOTE: the name cannot have underscore
name: abd-vro
owner: Example
environment: # The .Values.environment is computed by the deploy plugin - it returns//uses values like dev, qa, pre, prod etc
cluster: nonprod
version: 0.1
replicaCount: 1

labels:
  api:
    app: abd_vro
  db:
    global: &labels-db-global
      app: postgres-db
    pod:
      <<: *labels-db-global
      sidecar.istio.io/inject: "false"
  redis:
    global: &labels-redis-global
      app: redis-cache
    pod:
      <<: *labels-redis-global
      sidecar.istio.io/inject: "false"
  mq:
    global: &labels-mq-global
      app: rabbit-mq
    pod:
      <<: *labels-mq-global
      sidecar.istio.io/inject: "false"

images:
  registry: ghcr.io
  org: department-of-veterans-affairs
  # Note the repo name uses a hypen, not underscore
  repo: abd-vro
  redis:
    imageName: redis
    tag: latest
    imagePullPolicy: Always
  db:
    imageName: vro-postgres
    tag: latest
  mq:
    imageName: vro-rabbitmq
    tag: 3
  app:
    imageName: dev_vro-app
    tag: 0b9c9c4
    imagePullPolicy: Always
  dbInit:
    imageName: dev_vro-init-db
    tag: 0b9c9c4
    imagePullPolicy: Always
  pdfGenerator:
    imageName: dev_vro-service-pdfgenerator
    tag: 0b9c9c4
    imagePullPolicy: Always
  serviceAssessClaimDC7101:
    imageName: dev_vro-service-assessclaimdc7101
    tag: 0b9c9c4
    imagePullPolicy: Always
  serviceAssessClaimDC6602:
    imageName: dev_vro-service-assessclaimdc6602
    tag: 0b9c9c4
    imagePullPolicy: Always
  serviceDataAccess:
    imageName: dev_vro-service-data-access
    tag: 0b9c9c4
    imagePullPolicy: Always
    
resources:
  api:
    requests:
      cpu: 150m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  serviceRuby:
    requests:
      cpu: 150m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  db:
    limits:
      cpu: 10m
      memory: 256Mi
  redis:
    limits:
      cpu: 10m
      memory: 256Mi
  mq:
    limits:
      cpu: 10m
      memory: 256Mi

service:
  api:
    type: ClusterIP
    sourcePort: 8080
    targetPort: 8080
  db:
    type: ClusterIP
    sourcePort: 5432
    targetPort: 5432
  redis:
    type: ClusterIP
    sourcePort: 6379
    targetPort: 6379
  mq:
    type: ClusterIP
    sourcePort: 5672
    targetPort: 5672
  mqManagement:
    type: ClusterIP
    sourcePort: 15672
    targetPort: 15672

ports:
  - name: http
    containerPort: 8080
    protocol: TCP
  - name: liveness
    containerPort: 8081
    protocol: TCP
  - name: debug
    containerPort: 5005
    protocol: TCP

livenessProbe:
  httpGet:
    path: /liveness
    port: 8081
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /readiness
    port: 8081
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 3

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
api:
  apiKeySecret: api
  apiKey01: apiKey01
  apiKey02: apiKey02

postgres:
  dbName: vro
  secretName: postgres
  usernameKey: username
  passwordKey: password
  dbnameKey: dbName
  initDbName: vro
  initUsernameKey: initUsername
  initPasswordKey: initPassword
  urlKey: url
  schemaKey: schema

rabbitmq:
  secretName: rabbitmq
  usernameKey: User
  passwordKey: Pass

redis:
  secretName: redis
  passwordKey: redisPasswordKey

dataservice:
  lhTokenUrl: lhTokenUrl
  lhFhirUrl: lhFhirUrl
  lhPrivateKey: lhPrivateKey
  lhAssertionUrl: lhAssertionUrl
  lhAccessClientId: lhAccessClientId

dbInit:
  flywayurl: jdbc:postgresql://vro-api-postgres-service:5432/vro?user=vro_user&password=not-the-password
  flywayuser: vro_user
  flywaypassword: not-the-password
  flywayconnectRetries: 10
  flywaydefaultSchema: claims
  flywayschemas: claims
  flywaycreateSchemas: true
  flywaytable: schema_history
  flywaytablespace: pg_default
  flywaylocations: classpath:gov.va.starter.example.migration,database/migrations,filesystem:/flyway/sql/migrations
  flywaysqlMigrationPrefix: V
  flywayrepeatableSqlMigrationPrefix: RRR
  flywaysqlMigrationSeparator: __
  flywaysqlMigrationSuffixes: .sql
  flywayencoding: ISO-8859-1
  flywayplaceholderReplacement: true
  flywayplaceholdersusername: example_user
  flywayplaceholdersservicename: example_service
  flywayplaceholdersadminname: example_admin
  flywayplaceholdersdbname: vro
  flywayplaceholdersschemaname: claims
  flywayplaceholdersuserpassword: also-not-the-user-password
  flywayplaceholdersservicepassword: also-not-the-service-password
  flywayplaceholdersadminpassword: also-not-the-admin-password
  flywayplaceholderPrefix: \#\[
  flywayplaceholderSuffix: \]
  flywayskipDefaultCallbacks: false
  flywaytarget: latest
  flywayoutOfOrder: false
  flywayvalidateOnMigrate: true
  flywaycleanOnValidationError: true
  flywaymixed: true
  flywaygroup: false