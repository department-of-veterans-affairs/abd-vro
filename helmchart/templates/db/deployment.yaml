apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-postgres
  labels: {{- toYaml .Values.labels.db.global | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- toYaml .Values.labels.db.global | nindent 6 }}
  template:
    metadata:
      labels: {{- toYaml .Values.labels.db.pod | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.name }}-ghcr
      containers:
        - name: postgres-db
          image: {{ .Values.images.registry }}/{{ .Values.images.org }}/{{ .Values.images.repo }}/{{ .Values.images.db.imageName }}:{{ .Values.images.db.tag }}
          env:
            - name: POSTGRES_SUPER_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbinit.secretName }}
                  key: {{ .Values.dbinit.superUsernameKey }}
            - name: POSTGRES_SUPER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbinit.secretName }}
                  key: {{ .Values.dbinit.superPasswordKey }}
            - name: POSTGRES_SUPER_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbinit.secretName }}
                  key: {{ .Values.dbinit.superDbnameKey }}
            - name: POSTGRES_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbinit.secretName }}
                  key: {{ .Values.dbinit.usernameKey }}
            - name: POSTGRES_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbinit.secretName }}
                  key: {{ .Values.dbinit.passwordKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbinit.secretName }}
                  key: {{ .Values.dbinit.passwordKey }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbinit.secretName }}
                  key: {{ .Values.dbinit.usernameKey }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: {{ .Values.postgres.dbnameKey }}
          ports:
            - containerPort: {{ .Values.service.db.sourcePort }}
              protocol: TCP
      #    volumeMounts:
      #      - name: persistent-storage
      #        mountPath: /var/lib/postgresql/data/pgdata
          resources: {{- toYaml .Values.resources.db | nindent 12 }}
      #volumes:
      #  - name: persistent-storage
      #    persistentVolumeClaim:
      #      claimName: efs-claim #This name should match that of the persistent volume claim created above
