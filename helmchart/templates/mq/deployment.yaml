apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-rabbit-mq
  labels: {{- toYaml .Values.labels.mq.global | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- toYaml .Values.labels.mq.global | nindent 6 }}
  template:
    metadata:
      labels: {{- toYaml .Values.labels.mq.pod | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.name }}-ghcr
      #initContainers:
      #  - name: volume-mount-hack
      #    image: busybox
      #    command: ["sh", "-c", "chown -R 777:777 /var/lib/rabbitmq"]
      #    volumeMounts:
      #    - name: persistent-storage
      #      mountPath: /var/lib/rabbitmq
      containers:
        - name: rabbit-mq
          #image: {{ .Values.images.registry }}/{{ .Values.images.org }}/{{ .Values.images.repo }}/{{ .Values.images.mq.imageName }}:{{ .Values.images.mq.tag }}
          image: rabbitmq:3
          #command:
          #  - chown
          #  - -R
          #  - 777
          #  - /var/lib/rabbitmq
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.usernameKey }}
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.passwordKey }}
          ports:
            - containerPort: {{ .Values.service.mq.sourcePort }}
              protocol: TCP
          #volumeMounts:
          #  - name: persistent-storage
          #    mountPath: /var/lib/rabbitmq
          resources: {{- toYaml .Values.resources.mq | nindent 12 }}
      #volumes:
      #  - name: persistent-storage
      #    persistentVolumeClaim:
      #      claimName: efs-claim #This name should match that of the persistent volume claim created above
