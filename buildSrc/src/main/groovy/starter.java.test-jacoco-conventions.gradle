/**
 * This overrides the starter.java.test-jacoco-conventions provided by gov.va.starter:plugins
 * Since several VA starter plugins apply this plugin, overriding this plugin is easier
 * than creating a `local.` version and modifying those starter plugins.
 * Original: https://github.com/department-of-veterans-affairs/lighthouse-di-starter-boot/blob/main/buildSrc/src/main/groovy/starter.java.test-jacoco-conventions.gradle
 */

plugins {
  id 'java'
  id 'jacoco'
  id 'org.barfuin.gradle.jacocolog'
}

jacoco {
  toolVersion = jacoco_tool_version
  reportsDirectory = file("$buildDir/jacoco")
}

test {
  finalizedBy jacocoTestReport
  // see https://gitlab.com/barfuin/gradle-jacoco-log/-/tree/master#tasks
  finalizedBy jacocoLogTestCoverage
}

ext {
  jacocoExclude = []
}

jacocoTestReport {
  reports {
    html.required = true
    // Need xml output for task jacocoLogTestCoverage
    xml.required = true
    csv.required = false
  }

  // use afterEvaluate to allow subprojects to set different variable values
  // like ext.jacocoExclude
  afterEvaluate {
    getClassDirectories().setFrom(classDirectories.files.collect {
      fileTree(dir: it, exclude: jacocoExclude)
    })
  }

  dependsOn test
}

jacocoTestCoverageVerification {
  // use afterEvaluate to allow subprojects to set different variable values
  // like ext.jacoco_minimum_coverage
  afterEvaluate {
    violationRules {
      rule {
        enabled = jacoco_enforce_violations
        limit {
          minimum = jacoco_minimum_coverage
        }
      }
    }
    getClassDirectories().setFrom(classDirectories.files.collect {
      fileTree(dir: it, exclude: jacocoExclude)
    })
  }
}
