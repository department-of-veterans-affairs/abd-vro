# This file contains shared properties across all environments; it is always loaded by Spring
# See https://github.com/department-of-veterans-affairs/abd-vro/wiki/Configuration-settings#vros-use-of-spring-profiles

management:
  endpoints.web:
    exposure.include: "*"
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        liveness.include: livenessState
        readiness.include: readinessState, db
  metrics:
    enabled: true
    distribution:
      percentiles.http.server.requests: 0.5, 0.90, 0.95, 0.99, 0.999
      percentiles-histogram.http.server.requests: true
      sla.http.server.requests: 10ms, 50ms
      slo.http.server.requests: 10ms, 50ms
    tags:
      group: starter
      service: example
      region: "${POD_REGION:local}"
      stack: "${CLUSTER:dev}"
      ns: "${NAMESPACE:example}"
      pod: "${POD_ID:docker}"
    web.server.request.autotime.enabled: true
  server.port: 8061

server:
  ssl:
    enabled: false
  port: 8060
  maxHttpHeaderSize: 48000
  session:
    timeout: 60
  connection:
    timeout: 60000
  servlet:
    session:
      timeout: 120000
  # Needed to handle Swagger error: https://stackoverflow.com/questions/70906081/springboot-swagger3-failed-to-load-remote-configuration
  # Explanation: https://codetinkering.com/spring-forwarded-headers-example/
  # and https://tomgregory.com/spring-boot-behind-load-balancer-using-x-forwarded-headers/
  # https://stackoverflow.com/questions/68318269/spring-server-forward-headers-strategy-native-vs-framework
  # https://springdoc.org/faq.html#_how_can_i_deploy_springdoc_openapi_ui_behind_a_reverse_proxy
  use-forward-headers: true
  forward-headers-strategy: framework

spring:
  application:
    name: "vro-api"
  profiles:
    # See https://github.com/department-of-veterans-affairs/abd-vro/wiki/Configuration-settings#vros-use-of-spring-profiles
    active: ${ENV:default}
    # Define Sprint Profile Groups with group names corresponding to the value of $ENV
    group:
      # Configure profile group so that application-nonprod.yml is loaded, along with application-$ENV.yml
      local: nonprod
      # Remaining profiles are for deployment to LHDI's EKS environments
      # Configure profile group so that application-nonprod.yml and application-k8s.yml is loaded,
      # along with application-$ENV.yml
      dev: nonprod,k8s
      qa: nonprod,k8s
      sandbox: nonprod,k8s
      # For prod, only load application-prod.yml and application-k8s.yml
      prod: k8s
      # For prod-test, only load application-prod-test.yml and application-k8s.yml
      prod-test: k8s
  servlet:
    multipart:
      maxFileSize: 25MB
      maxRequestSize: 25MB
      enabled: true
    session:
      timeout: 120000
  resources:
    add-mappings: false
  http:
    encoding:
      force: true

# Set the context-path. WebFlux calls it base-path
# https://stackoverflow.com/questions/49196368/context-path-with-webflux
# Kubernetes rewrites the url to use `/`
spring.webflux.base-path: /

springdoc:
  writer-with-default-pretty-printer: true
  show-actuator: true
  # Useful diagnostics: https://docs.bmc.com/docs/ars2002/troubleshooting-issues-when-using-swagger-as-a-remedy-rest-api-client-941865631.html
  swagger-ui:
    operations-sorter: method
    tagsSorter: alpha
    # Redirects http.../swaggerui to http.../webjars/swagger-ui/index.html
    path: swaggerui
    disable-swagger-default-url: true
    # Populate API dropdown on the upper-right of Swagger UI
    urls:
      - name: 0. Gateway API
        # API defined for this API Gateway
        url: /abd-vro/v3/api-docs
      - name: 1. App API
        # API defined for the VRO Java-base App
        url: /vro-app/v3/api-docs
      - name: 2. Contention Classification API
        # Use the route defined under spring.cloud.gateway below
        url: /contention-classification/openapi.json
      - name: 3. EE - Max CFI API
        # Use the route defined under spring.cloud.gateway below
        url: /cfi/openapi.json
      - name: 4. EE - EP Merge App
        # Use the route defined under spring.cloud.gateway below
        url: /ep/openapi.json

log4j2:
  formatMsgNoLookups: true

vro:
  openapi:
    info:
      title: "Automated Benefits Delivery (ABD): Virtual Regional Office (VRO) API"
      description: "To improve benefit delivery to Veterans"
      version: "3.0.0"
      contact:
        name: Premal Shah
        email: "premal.shah@va.gov"
      license:
        name: CCO 1.0
        url: "https://github.com/department-of-veterans-affairs/abd-vro/blob/master/LICENSE.md"
    servers:
      - url: ${STARTER_OPENAPI_SERVERURL:/}
