plugins {
  id 'local.java.container-spring-conventions'
  id 'local.std.java.library-conventions'
  id 'jvm-test-suite'

  // id 'local.test.verbose'
}

ext {
  // skip kafka consumer test for now. will follow up with another PR to address the test coverage
  jacocoExclude = [
    '**/*Application.*',
    'gov/va/vro/services/bie/service/kafka/**'
  ]
}

jacocoTestReport {
  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, exclude: jacocoExclude)
    }))
  }
}

dependencies {
  implementation project(":shared:lib-bie-kafka")

  // avro schema and kafka
  implementation 'org.apache.avro:avro:1.11.3'
  implementation 'io.confluent:kafka-avro-serializer:7.6.0'
  implementation 'org.apache.kafka:connect-api:7.6.0-ce'
  implementation 'org.apache.commons:commons-compress:1.25.0'

  // RabbitMQ
  implementation 'org.springframework.boot:spring-boot-starter-amqp'
  implementation 'org.springframework.kafka:spring-kafka'

  // Provides endpoint for healthcheck
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  testImplementation 'org.springframework.amqp:spring-rabbit-test'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
}

// https://docs.gradle.org/current/userguide/jvm_test_suite_plugin.html#sec:jvm_test_suite_usage
testing {
  suites {
    integrationTest(JvmTestSuite) {
      dependencies {
        implementation project(":svc-bie-kafka")
        implementation project(":shared:lib-bie-kafka")

        implementation 'org.springframework.kafka:spring-kafka'

        implementation "org.springframework.boot:spring-boot-starter-test"

        implementation "org.springframework.boot:spring-boot-starter-amqp"
        implementation "com.fasterxml.jackson.core:jackson-databind"
      }
    }
  }
}
