spring:
  kafka:
    bootstrap-servers: "${BIE_KAFKA_PLACEHOLDERS_BROKERS:kafka.stage.bip.va.gov:443}"
    properties:
      schema:
        registry:
          url: "${BIE_KAFKA_PLACEHOLDERS_BROKERS:https://schemaregistry.stage.bip.va.gov:443}"
          ssl:
            protocol: SSL
            keystore:
              type: PKCS12
              location: "${KEYSTORE_FILE}"
              password: "${BIE_KAFKA_KEYSTORE_PASSWORD}"
            truststore:
              type: PKCS12
              location: "${TRUSTSTORE_FILE}"
              password: "${BIE_KAFKA_TRUSTSTORE_PASSWORD}"
    consumer:
      group-id: "${BIE_KAFKA_PLACEHOLDERS_GROUP_ID:vro-bie-ivv-vro}"
      key-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
      value-deserializer: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
      properties:
        security.protocol: SSL
        ssl:
          keystore:
            type: PKCS12
            location: "${KEYSTORE_FILE}"
            password: "${BIE_KAFKA_KEYSTORE_PASSWORD}"
          truststore:
            type: PKCS12
            location: "${TRUSTSTORE_FILE}"
            password: "${BIE_KAFKA_TRUSTSTORE_PASSWORD}"
kafka:
  topic:
    prefix: IVV
## Specify bie properties
bie:
  kafka-topic-to-amqp-exchange-map:
    # Map of entries where the keys are the kafka topics to which this app will subscribe. The value is the corresponding
    # RabbitMQ exchange upon which the payload will be put. These values are separated by a colon ":" character.
    IVV_CONTENTION_BIE_CONTENTION_ASSOCIATED_TO_CLAIM_V02: bie-events-contention-associated-to-claim
    IVV_CONTENTION_BIE_CONTENTION_UPDATED_V02: bie-events-contention-updated
    IVV_CONTENTION_BIE_CONTENTION_CLASSIFIED_V02: bie-events-contention-classified
    IVV_CONTENTION_BIE_CONTENTION_COMPLETED_V02: bie-events-contention-completed
    IVV_CONTENTION_BIE_CONTENTION_DELETED_V02: bie-events-contention-deleted
