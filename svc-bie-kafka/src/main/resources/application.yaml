spring:
  # Specify where Spring connects to RabbitMQ
  rabbitmq:
    host: "${RABBITMQ_PLACEHOLDERS_HOST:localhost}"
    port: 5672
    username: "${RABBITMQ_PLACEHOLDERS_USERNAME:guest}"
    password: "${RABBITMQ_PLACEHOLDERS_USERPASSWORD:guest}"

  # Specify where Spring connects to Kafka
  kafka:
    consumer:
      group-id: "${BIE_KAFKA_PLACEHOLDERS_GROUP_ID:vro-bie-group}"
    bootstrap-servers: "${BIE_KAFKA_PLACEHOLDERS_BROKERS:localhost:9092}"

## Specify bie properties
bie:
  topic-map:
    # Map of entries where the key is a kafka topic pattern (regex) to which this app will subscribe. This pattern will
    # be prepended and appended with wildcards to allow for any prefix or suffix in the kafka topic name. The value is
    # the corresponding RabbitMQ exchange/queue upon which the payload will be put. These values are separated by a
    # colon ":" character.
    CONTENTION_ASSOCIATED: bie-events-contention-associated
    CONTENTION_UPDATED: bie-events-contention-updated
    CONTENTION_CLASSIFIED: bie-events-contention-classified
    CONTENTION_COMPLETED: bie-events-contention-completed
    CONTENTION_DELETED: bie-events-contention-deleted

## Actuator for health check
management:
  server:
    port: 10011
  endpoint:
    health:
      show-details: always
      enabled: true
      probes:
        enabled: true
