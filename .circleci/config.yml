version: 2.1
jobs:
  build:
    # Remove if parallelism is not desired
    parallelism: 2
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: docker.pkg.github.com/department-of-veterans-affairs/lighthouse-di-circleci-java17-image/lighthouse-di-circleci-java17-image:0.0.5
        auth:
          username: $GITHUB_USERNAME
          password: $GITHUB_ACCESS_TOKEN
    steps:
      - checkout
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run: java --version
      - run: ./gradlew build
      - run: ./gradlew test
      # TODO: parallelize this since `./gradlew check` runs the subprojects' tests as well
      - run: ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run: ./gradlew docker
      - run:
          name: Copy subproject build artifacts
          command: |
            for B in */build; do SUBDIR="build/`dirname "$B"`"; mkdir "$SUBDIR"; cp -r "$B" "$SUBDIR" ; done
      - store_artifacts:
          path: build
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - run:
          name: Run cis-benchmark tests
          command: |
            cd ..
            git clone https://github.com/docker/docker-bench-security.git
            cd docker-bench-security
            sh docker-bench-security.sh -c container_images -i abd_vro -e check_4_5
