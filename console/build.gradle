plugins {
  id 'local.java.container-spring-conventions'
  id 'starter.std.java.library-spring-conventions'
  id 'groovy'
}

ext {
//	set('testcontainersVersion', "1.17.4")
}

dependencies {
  // To fix jackson error: Java 8 date/time type `java.time.LocalDateTime` not supported by default
  // in order to convert ClaimEntity.createdAt into JSON.
  // Also need to set `camel.dataformat.json-jackson.auto-discover-object-mapper: true`
  // https://stackoverflow.com/questions/33397359/how-to-configure-jackson-objectmapper-for-camel-in-spring-boot
  runtimeOnly "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

  // Needed to access DB Entity records
  implementation project(':persistence:model')

  // Needed to deserialize objects passed in MQ messages
  implementation project(':shared:domain')
  implementation project(':service:spi')

  // To connect to Camel
  implementation project(':shared:lib-camel-connector')
  implementation "org.apache.camel.springboot:camel-spring-boot-starter:${camel_version}"

  implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_databind_version}"

  // Groovy REPL shell
  implementation 'org.codehaus.groovy:groovy'
  implementation 'org.codehaus.groovy:groovy-json'
  implementation 'org.codehaus.groovy:groovy-groovysh'
  implementation 'jline:jline:2.14.6' // Needed to add custom Groovysh commands

  // DB access
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  runtimeOnly "org.postgresql:postgresql:${postgresql_version}"

  // Redis
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'

// TODO: add integration tests
//    testImplementation('org.springframework.boot:spring-boot-starter-test') {
//        exclude group:'org.junit.vintage', module: 'junit-vintage-engine'
//    }
//	testImplementation "org.testcontainers:junit-jupiter:${testcontainers_version}"
}

// TODO: add integration tests
//configurations {
//  integrationTestImplementation.extendsFrom implementation
//  integrationTestRuntimeOnly.extendsFrom runtimeOnly
//}

docker {
  files "src/main/resources/groovysh.rc"
}

tasks.named('test') {
  useJUnitPlatform()
}
