/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Support convention plugins written in Groovy. Convention plugins are build scripts in 'src/main' that automatically become available as plugins in the main build.
    id 'groovy-gradle-plugin'
    id 'org.jetbrains.intellij' version '1.14.2'
}

intellij {
    version = '2023.1'
}

repositories {
    // Use the plugin portal to apply community plugins in convention plugins.
    gradlePluginPortal()
    mavenCentral()
}

dependencies {
    // Set versions for these plugins so we don't have to repeat the versions in convention.gradle files
    // https://discuss.gradle.org/t/applying-a-plugin-version-inside-a-convention-plugin/42160
    // Syntax: "<pluginName>:<pluginName>.gradle.plugin:<pluginVersion>"
    implementation 'io.freefair.lombok:io.freefair.lombok.gradle.plugin:8.1.0'
    implementation 'com.diffplug.spotless:com.diffplug.spotless.gradle.plugin:6.19.0'
    implementation 'com.felipefzdz.gradle.shellcheck:com.felipefzdz.gradle.shellcheck.gradle.plugin:1.4.6'
    implementation 'com.palantir.docker:com.palantir.docker.gradle.plugin:0.35.0'
    implementation 'com.palantir.docker-run:com.palantir.docker-run.gradle.plugin:0.35.0'
    implementation 'org.springdoc.openapi-gradle-plugin:org.springdoc.openapi-gradle-plugin.gradle.plugin:1.6.0'

    implementation 'org.barfuin.gradle.jacocolog:org.barfuin.gradle.jacocolog.gradle.plugin:3.1.0'
    implementation 'org.barfuin.gradle.taskinfo:org.barfuin.gradle.taskinfo.gradle.plugin:2.1.0'
    implementation 'nebula.lint:nebula.lint.gradle.plugin:18.1.0'
}
