apiVersion: apps/v1
kind: Deployment
metadata:
  # Also used as the pod's prefix
  name: vro-app
  labels: {{- toYaml .Values.labels | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- toYaml .Values.labels | nindent 6 }}
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
        {{- toYaml .Values.labels | nindent 8 }}
      annotations:
        {{- include "vro.annotations.pod" . | nindent 8 }}
        {{- include "vro.annotations.reloadLatest" . | nindent 8 }}
    spec:
      {{- include "vro.imagePullSecrets" . | nindent 6 }}
      initContainers:
# TODO: Move these checks into the db-init container in an RDS compatible way
#        - name: pg-isready{{ include "vro.containerSuffix" . }}
#          image: {{ include "vro.imageRegistryPath" . }}vro-postgres:{{ include "vro.imageTag" . }}
#          env:
#            - name: POSTGRES_FLYWAY_USER
#              valueFrom:
#                secretKeyRef:
#                  name: vro-db
#                  key: DB_FLYWAYUSER_NAME
#            - name: POSTGRES_DB
#              value: {{ .Values.global.service.db.databaseName }}
#          command:
#            - /bin/sh
#            - -c
#            - |
#              /bin/sh -c "
#                until pg_isready -d $POSTGRES_DB -h {{ .Values.global.hostnamePrefix }}-postgres -p {{ .Values.global.service.db.targetPort}} -U $POSTGRES_FLYWAY_USER; do
#                 echo 'Waiting for Postgres DB to be available'
#                 sleep 5
#                done
#              "
#          resources:
#            # TODO: reduce resources since this container requires very little
#            limits:
#              cpu: 10m
#              memory: 256Mi
        - name: db-init{{ include "vro.containerSuffix" . }}
          image: {{ include "vro.imageRegistryPath" . }}vro-db-init:{{ .Values.dbInit.imageTag  | default .Values.global.imageTag }}
          env:
            {{- include "vro.flyway.envVars" . | nindent 12 }}
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
      containers:
        - name: app{{ include "vro.containerSuffix" . }}
          image: {{ include "vro.imageRegistryPath" . }}vro-app:{{ include "vro.imageTag" . }}
          ports: {{- toYaml .Values.ports | nindent 12 }}
            - containerPort: {{ .Values.service.app.sourcePort }}
              protocol: TCP
              name: http
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          env:
            {{- include "vro.commonEnvVars" . | nindent 12 }}
            {{- include "vro.dbClient.envVars" . | nindent 12 }}
            {{- include "vro.mqClient.envVars" . | nindent 12 }}
            {{- include "vro.redisClient.envVars" . | nindent 12 }}

            - name: JAVA_OPTS
              value: -Xmx512m
            - name: PERSIST_TRACKING_FOLDER
              value: {{ .Values.global.pv.tracking.mountPath }}
            - name: STARTER_OPENAPI_SERVERURL
              value: /{{ .Values.serviceUriPrefix }}

            - name: VRO_SECRETS_API
              valueFrom:
                secretKeyRef:
                  name: vro-secrets-api
                  key: VRO_SECRETS_API
            - name: VRO_SECRETS_SLACK
              valueFrom:
                secretKeyRef:
                  name: vro-secrets-slack
                  key: VRO_SECRETS_SLACK

            # These 2 should be moved to application-*.yml, then
            # values-for-prod.yaml and values-for-prod.yaml can be deleted.
            - name: LH_API_AUTH_URL
              value: {{ .Values.lhApiAuthUrl }}
            - name: VRO_AUD_URL
              value: {{ .Values.vroAudUrl }}

            - name: VRO_SECRETS_BIP
              valueFrom:
                secretKeyRef:
                  name: vro-secrets-bip
                  key: VRO_SECRETS_BIP
#            - name: BIP_CLAIM_URL
#              value: { { .Values.bip.bipClaimUrl }}
#            - name: BIP_EVIDENCE_URL
#              value: { { .Values.bip.bipEvidenceUrl }}

            # This should be moved to application.yml
            - name: BIP_STATION_ID
              value: "281"
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          volumeMounts:
            {{- include "vro.volumeMounts.tracking" . | nindent 12 }}
      volumes:
        {{- include "vro.volumes.tracking" . | nindent 8 }}
