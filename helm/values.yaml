# Best practices: https://helm.sh/docs/chart_best_practices/values/

# Normal state:
rabbitmq:
  enabled: true
postgres:
  enabled: true
redis:
  enabled: true
vro:
  enabled: true
# Enable as needed:
console:
  enabled: false

# This file makes extensive use of YAML Anchors to reduce repetition.

# global (reserved keyword) allows all subcharts to access values using .Values.global.someKey
# However, this makes the subchart less independent: https://itnext.io/helm-3-umbrella-charts-global-values-in-sub-charts-666437d4ed28
# so don't use .Values.global.someKey. Instead, use '<<: *anchor-global'
# To override a setting on commandline: helm --set-string "global.someKey=someValue" ...
global: &anchor-global
  # ================= Constants =================
  # Should be referenced as .Values.global.someParam

  # name cannot have underscore
  # Used as imagePullSecrets, secretKeyRef.name, container name prefixes,
  # virtual-service's uri.prefix and for env vars: SERVER_SERVLET_CONTEXTPATH, STARTER_OPENAPI_SERVERURL
  name: abd-vro
  # owner is used in annotations
  owner: VA-OCTO
  hostnamePrefix: vro

  tracking:
    pvcName: tracking-persistent-storage


  # Not used: cluster: nonprod

  # ================= Parameters =================
  # Should be referenced as .Values.global.someParam

  # environment is overridden by deploy scripts with $ENV values like dev, qa, prod
  environment: dev

  # version is used in annotations for APP
  version: 0.1

  images:
    pullSecretsName: abd-vro-ghcr
    repo: abd-vro
    tag: "someGlobalTag"
    services:
      environment: nonprod # for APP

  # endpoint is api if ENV==prod; otherwise dev
  # Used by virtual-service's hosts
  endpoint: dev
  # ================= Parameters =================


  service:
#    api:
#      type: ClusterIP
#      sourcePort: 8080
#      targetPort: 8080
#    db:
#      type: ClusterIP
#      sourcePort: 5432
#      targetPort: 5432
    mq:
      sourcePort: 5672
      targetPort: 5672

  ports:
    - name: http
      containerPort: 8080
      protocol: TCP
    - name: liveness
      containerPort: 8081
      protocol: TCP
    - name: debug
      containerPort: 5005
      protocol: TCP

  livenessProbe:
    httpGet:
      path: /liveness
      port: 8081
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3

  readinessProbe:
    httpGet:
      path: /readiness
      port: 8081
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3

  # autoscaling:
  #   enabled: false
  #   minReplicas: 1
  #   maxReplicas: 100
  #   targetCPUUtilizationPercentage: 80
  api:
    apiKeySecret: api
    apiKey01: apiKey01
    apiKey02: apiKey02
    vroNonProdKey: vroNonProd

  rabbitmq:
    secretKeyRef:
      name: rabbitmq
      usernameKey: User
      passwordKey: Pass

  redis:
    secretKeyRef:
      name: redis
      passwordKey: redisPassword

  postgres:
    secretKeyRef:
      name: postgres
      urlKey: url
      usernameKey: username
      passwordKey: password
      dbnameKey: dbName
      schemaKey: schema
    dbName: vro
    initDbName: vro
    initUsernameKey: initUsername
    initPasswordKey: initPassword

  mas:
    keyName: mas
    masApiAuthClientId: masApiAuthClientId
    masApiAuthClientSecret: masApiAuthClientSecret
    masApiAuthScope: masApiAuthScope
    masApiAuthTokenUri: masApiAuthTokenUri
    masApiBaseUrl: masApiBaseUrl
    masCollectionAnnotsPath: masCollectionAnnotsPath
    masCollectionStatusPath: masCollectionStatusPath
    masCreateExamOrderPath: masCreateExampOrderPath

  bip:
    keyName: bip
    bipApplicationId: bipApplicationId
    bipApplicationIss: bipApplicationIss
    bipClaimSecret: bipClaimSecret
    bipClaimUrl: bipClaimUrl
    bipClaimUserId: bipClaimUserId
    bipEvidenceSecret: bipEvidenceSecret
    bipEvidenceUrl: bipEvidenceUrl
    bipEvidenceUserId: bipEvidenceUserId
    bipStationId: bipStationId
    bipKeyStore: bipKeystore
    bipTrustStore: bipTruststore
    bipPassword: bipPassword
    bipAlias: bipAlias

  dataservice:
    lhTokenUrl: lhTokenUrl
    lhFhirUrl: lhFhirUrl
    lhPrivateKey: lhPrivateKey
    lhAssertionUrl: lhAssertionUrl
    lhAccessClientId: lhAccessClientId
    lhApiAuthUrl: lhApiAuthUrl
    vroAudUrl: vroAudUrl
    lhVroApiKey: lhVroApiKey
    validateToken: validateToken
    slackExceptionChannel: SLACK_EXCEPTION_CHANNEL
    slackExceptionWebhook: SLACK_EXCEPTION_WEBHOOK

  dbinit:
    secretName: dbinit
    superUsernameKey: superUsername
    superPasswordKey: superPassword
    superDbnameKey: superDbname
    urlKey: url
    usernameKey: username
    passwordKey: password

# To test: helm upgrade --install vro-test helm -n va-abd-rrd-dev --set-string info.github_token=${GITHUB_ACCESS_TOKEN} --set-string console-chart.images.console.tag=latest --set console.enabled=true --debug
#console-chart:
#  <<: *anchor-global

# To test: helm upgrade --install vro-test helm -n va-abd-rrd-dev --set-string info.github_token=${GITHUB_ACCESS_TOKEN} --set rabbitmq.enabled=true --debug
#rabbitmq-chart:
#  <<: *anchor-global
