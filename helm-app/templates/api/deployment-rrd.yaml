apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-rrd
  labels: {{- toYaml .Values.labels.api | nindent 4 }}
#  annotations:
#    app.kubernetes.io/name: {{ .Values.name }}
#    app.kubernetes.io/version: {{ .Values.version | quote }}
#    app.kubernetes.io/owner: {{ .Values.owner }}
#    app.kubernetes.io/env: {{ .Values.environment }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- toYaml .Values.labels.api | nindent 6 }}
  template:
    metadata:
      labels: {{- toYaml .Values.labels.api | nindent 8 }}
        sidecar.istio.io/inject: "false"
#      annotations:
#        app.kubernetes.io/podname: {{ .Values.name }}
#        app.kubernetes.io/podversion: {{ .Values.version | quote }}
#        app.kubernetes.io/podowner: {{ .Values.owner }}
#        app.kubernetes.io/podenv: {{ .Values.environment }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.name }}-ghcr
      containers:
        - name: {{ .Values.name }}-assessclaimdc7101
          image: {{ .Values.images.registry }}/{{ .Values.images.org }}/{{ .Values.images.repo }}/{{ .Values.images.serviceAssessClaimDC7101.imageName }}:{{ .Values.images.serviceAssessClaimDC7101.tag }}
          imagePullPolicy: {{ .Values.images.serviceAssessClaimDC7101.imagePullPolicy }}
          env:
            - name: ENV
              value: {{ .Values.environment }}
            - name: RABBITMQ_PLACEHOLDERS_HOST
              value: {{ .Chart.Name }}-rabbit-mq-service
            - name: RABBITMQ_PLACEHOLDERS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.usernameKey }}
            - name: RABBITMQ_PLACEHOLDERS_USERPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.passwordKey }}
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
        - name: {{ .Values.name }}-assessclaimdc6602
          image: {{ .Values.images.registry }}/{{ .Values.images.org }}/{{ .Values.images.repo }}/{{ .Values.images.serviceAssessClaimDC6602.imageName }}:{{ .Values.images.serviceAssessClaimDC6602.tag }}
          imagePullPolicy: {{ .Values.images.serviceAssessClaimDC6602.imagePullPolicy }}
          env:
            - name: ENV
              value: {{ .Values.environment }}
            - name: RABBITMQ_PLACEHOLDERS_HOST
              value: {{ .Chart.Name }}-rabbit-mq-service
            - name: RABBITMQ_PLACEHOLDERS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.usernameKey }}
            - name: RABBITMQ_PLACEHOLDERS_USERPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.passwordKey }}
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
        - name: {{ .Values.name }}-pdfgenerator
          image: {{ .Values.images.registry }}/{{ .Values.images.org }}/{{ .Values.images.repo }}/{{ .Values.images.pdfGenerator.imageName }}:{{ .Values.images.pdfGenerator.tag }}
          imagePullPolicy: {{ .Values.images.pdfGenerator.imagePullPolicy }}
          env:
            - name: ENV
              value: {{ .Values.environment }}
            - name: RABBITMQ_PLACEHOLDERS_HOST
              value: {{ .Chart.Name }}-rabbit-mq-service
            - name: RABBITMQ_PLACEHOLDERS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.usernameKey }}
            - name: RABBITMQ_PLACEHOLDERS_USERPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.passwordKey }}
            - name: REDIS_PLACEHOLDERS_HOST
              value: {{ .Chart.Name }}-redis-service
            - name: REDIS_PLACEHOLDERS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: {{ .Values.redis.passwordKey }}
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
        - name: {{ .Values.name }}-service-data-access
          image: {{ .Values.images.registry }}/{{ .Values.images.org }}/{{ .Values.images.repo }}/{{ .Values.images.serviceDataAccess.imageName }}:{{ .Values.images.serviceDataAccess.tag }}
          imagePullPolicy: {{ .Values.images.serviceDataAccess.imagePullPolicy }}
          env:
            - name: ENV
              value: {{ .Values.environment }}
            - name: RABBITMQ_PLACEHOLDERS_HOST
              value: {{ .Chart.Name }}-rabbit-mq-service
            - name: RABBITMQ_PLACEHOLDERS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.usernameKey }}
            - name: RABBITMQ_PLACEHOLDERS_USERPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secretName }}
                  key: {{ .Values.rabbitmq.passwordKey }}
            - name: LH_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}
                  key: {{ .Values.dataservice.lhPrivateKey }}
            - name: LH_ACCESS_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}
                  key: {{ .Values.dataservice.lhAccessClientId }}
            - name: LH_ASSERTION_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}
                  key: {{ .Values.dataservice.lhAssertionUrl }}
            # Setting these secrets are only needed for the prod cluster
            # For the nonprod cluster, these settings are set directly in application-*.yml files
            - name: LH_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}
                  key: {{ .Values.dataservice.lhTokenUrl }}
            - name: LH_FHIR_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}
                  key: {{ .Values.dataservice.lhFhirUrl }}
            - name: MAS_API_AUTH_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masApiAuthClientId }}
            - name: MAS_API_AUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masApiAuthClientSecret }}
            - name: MAS_API_AUTH_SCOPE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masApiAuthScope }}
            - name: MAS_API_AUTH_TOKEN_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masApiAuthTokenUri }}
            - name: MAS_API_BAS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masApiBaseUrl }}
            - name: MAS_COLLECTION_ANNOTS_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masCollectionAnnotsPath }}
            - name: MAS_COLLECTION_STATUS_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masCollectionStatusPath }}
            - name: MAS_CREATE_EXAM_ORDER_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mas.keyName }}
                  key: {{ .Values.mas.masCreateExamOrderPath }}

            - name: BIP_APPLICATION_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipApplicationId }}
            - name: BIP_APPLICATION_ISS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipApplicationIss }}
            - name: BIP_CLAIM_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipClaimSecret }}
            - name: BIP_CLAIM_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipClaimUrl }}
            - name: BIP_CLAIM_USERID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipClaimUserId }}
            - name: BIP_EVIDENCE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipEvidenceSecret }}
            - name: BIP_EVIDENCE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipEvidenceUrl }}
            - name: BIP_EVIDENCE_USERID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipEvidenceUserId }}
            - name: BIP_STATION_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipStationId }}
            - name: BIP_KEYSTORE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipKeyStore }}
            - name: BIP_TRUSTSTORE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipTrustStore }}
            - name: BIP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipPassword }}
            - name: BIP_ALIAS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bip.keyName }}
                  key: {{ .Values.bip.bipAlias }}
          resources:
            requests:
              cpu: 150m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
