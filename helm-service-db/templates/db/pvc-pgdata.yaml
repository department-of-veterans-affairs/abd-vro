apiVersion: v1
kind: PersistentVolumeClaim
# It can take significant time to set up these PVs and it doesn't need to happen often, so keep this separate from
# the other deployments.
metadata:
  name: ebs-db-claim
  labels:
    # The label is needed to ensure containers that use this volume are deployed in the same node
    # using podAffinity https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    volume: database
  annotations:
    # As an alternative to a StatefulSet (mentioned below), keep this PVC when the deploy is deleted/uninstalled.
    # Helm will no longer manage it in any way, so this PVC must be manually deleted.
    # https://helm.sh/docs/topics/charts_hooks/#hook-resources-are-not-managed-with-corresponding-releases
    helm.sh/resource-policy: keep
spec:
  accessModes:
    # Due to several issues with EFS (https://dsva.slack.com/archives/C03UA9MV1EH/p1677507203922209),
    # we're using EBS, which requires mounting containers to be in the same pod.
    # EBS only supports ReadWriteOnce
    # "the volume can be mounted as read-write by a single node. ReadWriteOnce access mode still can
    # allow multiple pods to access the volume when the pods are running on the same node."
    - ReadWriteOnce
  # Until we implement a StatefulSet to retain the associated PV, use the non-retain storage class
  # so that we are not creating a bunch of orphaned PVs when deploy-app.sh calls `helm del`.
  # https://dsva.slack.com/archives/C04CA47HV96/p1671058797549319?thread_ts=1670468543.753259&cid=C04CA47HV96
  storageClassName: ebs-sc
  resources:
    requests:
      storage: 2Gi
