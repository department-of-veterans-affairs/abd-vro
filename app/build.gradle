plugins {
    id 'local.std.java.application-conventions'
    id 'starter.java.config-conventions'
    id 'starter.java.build-utils-conventions'
}

dependencies {
    implementation project(':domain')
    implementation project(':api')
    implementation project(':controller')
    implementation project(':persistence:model')
    implementation project(':service:provider')
    implementation project(':service:spi')
    implementation project(':service:db')

    implementation 'gov.va.starter:open-api'
    // Provides http://localhost:8081/health endpoint used in app's Dockerfile
    implementation 'gov.va.starter:health'
    // Not sure if these are needed:
    implementation 'gov.va.starter:tracing'
    implementation 'gov.va.starter:error-handling'
    implementation 'gov.va.starter:exceptions'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    // https://mvnrepository.com/artifact/com.vladmihalcea/hibernate-types-55
    implementation 'com.vladmihalcea:hibernate-types-55:2.20.0'


    // Needed?
    // implementation "org.postgresql:postgresql:${postgresql_version}"
    runtimeOnly "org.postgresql:postgresql:${postgresql_version}"

    testRuntimeOnly "com.h2database:h2:${h2_version}"

    testImplementation "org.apache.camel:camel-test-spring-junit5:${camel_version}"
}

openApi {
    customBootRun {
        getClasspath().setFrom(sourceSets.test.runtimeClasspath)
    }
}

afterEvaluate {
    tasks.named('forkedSpringBootRun').configure {
        dependsOn 'bootStartScripts'
        dependsOn 'checkstyleIntegrationTest'
        dependsOn 'checkstyleMain'
        dependsOn 'checkstyleTest'
        dependsOn 'compileIntegrationTestJava'
        dependsOn 'dockerfileZip'
        dependsOn 'integrationTest'
        dependsOn 'jar'
        dependsOn 'spotlessJava'
        dependsOn 'startScripts'
        dependsOn 'test'
        // dependsOn ':service-python:pytest' // slows down `:app:build` task

        dependsOn 'jacocoTestReport'
        dependsOn 'jacocoTestCoverageVerification'

        dependsOn 'dockerPrepare'
    }

    tasks.named('spectralLint').configure {
        dependsOn 'forkedSpringBootStop'
    }
}
