version: '3.9'

networks:
  internal:
  external:

volumes:
  pgdata:

# Reusable blocks
# https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd
x-postgres-vars: &postgres-vars
  POSTGRES_HOST: postgres-service
  POSTGRES_URL: jdbc:postgresql://postgres-service:5432/vro
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_SCHEMA: claims

x-redis-placeholder-vars: &redis-placeholder-vars
  REDIS_PLACEHOLDERS_HOST: redis-service
  REDIS_PLACEHOLDERS_PASSWORD: ${REDIS_PLACEHOLDERS_PASSWORD}

x-rabbitmq-placeholder-vars: &rabbitmq-placeholder-vars
  RABBITMQ_PLACEHOLDERS_HOST: rabbitmq-service
  RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
  RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}

x-rabbitmq-client-vars: &rabbitmq-client-vars
  RABBITMQ_PORT: 5672
  RABBITMQ_RETRY_LIMIT: 3
  RABBITMQ_TIMEOUT: 10800

x-common-security-opt: &common-security-opt
  security_opt:
    - no-new-privileges:true

services:

  rabbitmq-service:
    image: rabbitmq:3-management
    hostname: rabbitmq-service
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 30
    expose:
      - "5672"
      - "15672"
    networks:
      - internal
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}

  redis-service:
    image: redis
    hostname: redis-service
    expose:
      - "6379"
    networks:
      - internal
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PLACEHOLDERS_PASSWORD}

  postgres-service:
    image: va/abd_vro-postgres
    hostname: postgres-service
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_SUPER_USER}
      POSTGRES_PASSWORD: ${POSTGRES_SUPER_PASSWORD}
      POSTGRES_DB: ${POSTGRES_SUPER_DB}
      FLYWAY_USER: ${POSTGRES_ADMIN_USER}
      FLYWAY_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      FLYWAY_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal
# NOTE, security favors removing external access from the database container
# This external access to the DB is enabled only for non-production environments.
      - external
    ports:
      - "5432:5432"

  db-init:
    image: va/abd_vro-db-init:latest
    depends_on:
      - postgres-service
    networks:
      - internal
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres-service:5432/${POSTGRES_DB}?user=${POSTGRES_ADMIN_USER}&password=${POSTGRES_ADMIN_PASSWORD}
      FLYWAY_USER: ${POSTGRES_ADMIN_USER}
      FLYWAY_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      FLYWAY_SCHEMA: ${POSTGRES_SCHEMA}
      FLYWAY_TABLE: ${FLYWAY_TABLE}
      FLYWAY_TABLESPACE: ${FLYWAY_TABLESPACE}
      FLYWAY_PLACEHOLDERS_USERNAME: ${POSTGRES_USER}
      FLYWAY_PLACEHOLDERS_DB_NAME: ${POSTGRES_DB}
      FLYWAY_PLACEHOLDERS_SCHEMA_NAME: ${POSTGRES_SCHEMA}
      FLYWAY_PLACEHOLDERS_USER_PASSWORD: ${POSTGRES_PASSWORD}

  app:
    image: va/abd_vro-app:latest
    <<: *common-security-opt
    hostname: app
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *redis-placeholder-vars
      <<: *postgres-vars
      ENV: ${ENV:-dev}
      # Cause application-compose.yml to be used
      JAVA_PROFILE: "-Dspring.profiles.include=compose"
      VRO_NON_PROD: "$VRO_NON_PROD"
    depends_on:
      - postgres-service
      - rabbitmq-service
      - redis-service
      - db-init
    networks:
      - internal
      - external

  svc-assessor-dc7101:
    image: va/abd_vro-assessclaimdc7101:latest
    <<: *common-security-opt
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc7101v2:
    image: va/abd_vro-assessclaimdc7101v2:latest
    <<: *common-security-opt
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc6602:
    image: va/abd_vro-assessclaimdc6602:latest
    <<: *common-security-opt
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc6602v2:
    image: va/abd_vro-assessclaimdc6602v2:latest
    <<: *common-security-opt
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal
    profiles: ["prototype"]

  svc-assessor-dc6510:
    image: va/abd_vro-assessclaimdc6510:latest
    <<: *common-security-opt
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal
    profiles: ["prototype"]

  svc-pdf-generator:
    image: va/abd_vro-pdfgenerator:latest
    <<: *common-security-opt
    environment:
      <<: *redis-placeholder-vars
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      redis-service:
        condition: service_started
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-lighthouse-api:
    image: va/abd_vro-service-data-access:latest
    <<: *common-security-opt
    environment:
      <<: *rabbitmq-placeholder-vars
      LH_PRIVATE_KEY: ${LH_PRIVATE_KEY}
      LH_ACCESS_CLIENT_ID: ${LH_ACCESS_CLIENT_ID}
      LH_ASSERTION_URL: ${LH_ASSERTION_URL}
      LH_TOKEN_URL: ${LH_TOKEN_URL}
      LH_FHIR_URL: ${LH_FHIR_URL}
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  console:
    image: va/abd_vro-console:latest
    <<: *common-security-opt
    profiles: ["debug"]
    # stdin and tty are needed for user interaction
    stdin_open: true
    tty: true
    environment:
      <<: *redis-placeholder-vars
      <<: *rabbitmq-placeholder-vars
      <<: *postgres-vars
    depends_on:
      postgres-service:
        condition: service_started
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal
