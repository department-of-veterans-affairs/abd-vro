version: '3.9'

networks:
  internal:
  external:

volumes:
  pgdata:

services:

  vro-api-rabbit-mq-service:
    image: rabbitmq:3-management
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 30
    hostname: vro-api-rabbit-mq-service
    expose:
      - "5672"
      - "15672"
    networks:
      - internal
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}
    restart: on-failure:5

  vro-api-redis-service:
    image: redis
    hostname: vro-api-redis-service
    expose:
      - "6379"
    networks:
      - internal
    ports:
      - "6379:6379"
    restart: on-failure:5
    command: redis-server --requirepass ${REDIS_PLACEHOLDERS_PASSWORD}

  vro-api-postgres-service:
    image: postgres
    hostname: vro-api-postgres-service
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_URL: ${POSTGRES_URL} #jdbc:postgresql://vro-api-postgres-service:5432/vro
      POSTGRES_SCHEMA: claims
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal
# NOTE, security favors removing external access from the database container
      - external
    ports:
      - "5432:5432"
    restart: on-failure:5

  db-init:
    image: va/abd_vro-db-init:latest
    depends_on:
      - vro-api-postgres-service
    networks:
      - internal
    environment:
      FLYWAY_URL: ${FLYWAY_URL}
      FLYWAY_USER: ${FLYWAY_USER}
      FLYWAY_PASSWORD: ${FLYWAY_PASSWORD}
     # FLYWAY_CONNECT_RETRIES: ${FLYWAY_CONNECT_RETRIES}
      FLYWAY_DEFAULT_SCHEMA: ${FLYWAY_DEFAULT_SCHEMA}
      FLYWAY_SCHEMA: ${FLYWAY_SCHEMA}
      FLYWAY_CREATE_SCHEMAS: ${FLYWAY_CREATE_SCHEMAS}
      FLYWAY_TABLE: ${FLYWAY_TABLE}
      FLYWAY_TABLESPACE: ${FLYWAY_TABLESPACE}
     # FLYWAY_LOCATIONS: ${FLYWAY_LOCATIONS}
      FLYWAY_SQL_MIGRATION_PREFIX: ${FLYWAY_SQL_MIGRATION_PREFIX}
      FLYWAY_REPEATABLE_SQL_MIGRATION_PREFIX: ${FLYWAY_REPEATABLE_SQL_MIGRATION_PREFIX}
     # FLYWAY_SQL_MIGRATION_SEPARATOR: ${FLYWAY_SQL_MIGRATION_SEPARATOR}
     # FLYWAY_SQL_MIGRATION_SUFFIXES: .${FLYWAY_SQL_MIGRATION_SUFFIXES}
     # FLYWAY_ENCODING: ${FLYWAY_ENCODING}
     # FLYWAY_PLACEHOLDER_REPLACEMENT: ${FLYWAY_PLACEHOLDER_REPLACEMENT}
      FLYWAY_PLACEHOLDERS_USERNAME: ${FLYWAY_PLACEHOLDERS_USERNAME}
      FLYWAY_PLACEHOLDERS_SERVICE_NAME: ${FLYWAY_PLACEHOLDERS_SERVICE_NAME}
      FLYWAY_PLACEHOLDERS_ADMIN_NAME: ${FLYWAY_PLACEHOLDERS_ADMIN_NAME}
      FLYWAY_PLACEHOLDERS_DB_NAME: ${FLYWAY_PLACEHOLDERS_DB_NAME}
      FLYWAY_PLACEHOLDERS_SCHEMA_NAME: ${FLYWAY_PLACEHOLDERS_SCHEMA_NAME}
      FLYWAY_PLACEHOLDERS_USER_PASSWORD: ${FLYWAY_PLACEHOLDERS_USER_PASSWORD}
      FLYWAY_PLACEHOLDERS_SERVICE_PASSWORD: ${FLYWAY_PLACEHOLDERS_SERVICE_PASSWORD}
      FLYWAY_PLACEHOLDERS_ADMIN_PASSWORD: ${FLYWAY_PLACEHOLDERS_ADMIN_PASSWORD}
     # FLYWAY_PLACEHOLDER_PREFIX: ${FLYWAY_PLACEHOLDER_PREFIX}
     # FLYWAY_PLACEHOLDER_SUFFIX: ${FLYWAY_PLACEHOLDER_SUFFIX}
      FLYWAY_SKIP_DEFAULT_CALLBACKS: ${FLYWAY_SKIP_DEFAULT_CALLBACKS}
      #FLYWAY_TARGET: ${FLYWAY_TARGET}
      #FLYWAY_OUT_OF_ORDER: ${FLYWAY_OUT_OF_ORDER}
      #FLYWAY_VALIDATE_ON_MIGRATE: ${FLYWAY_VALIDATE_ON_MIGRATE}
      #FLYWAY_CLEAN_ON_VALIDATION_ERROR: ${FLYWAY_CLEAN_ON_VALIDATION_ERROR}
      #FLYWAY_MIXED: ${FLYWAY_MIXED}
     # FLYWAY_GROUP: ${FLYWAY_GROUP}
      FLYWAY_CLEAN_DISABLED: ${FLYWAY_CLEAN_DISABLED}
      FLYWAY_BASELINE_ON_MIGRATE: ${FLYWAY_BASELINE_ON_MIGRATE}
      FLYWAY_INSTALLED_BY: ${FLYWAY_INSTALLED_BY}


    restart: on-failure:5

  abd_vro:
    image: va/abd_vro-app:latest
    hostname: abd_vro
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      POSTGRES_HOST: vro-api-postgres-service
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URL: ${POSTGRES_URL} #jdbc:postgresql://vro-api-postgres-service:5432/vro
      POSTGRES_SCHEMA: claims
      JAVA_PROFILE: "-Dspring.profiles.include=compose"
      # TODO: move these RabbitMQ configurations into a reusable yaml block
      RABBITMQ_PLACEHOLDERS_HOST: vro-api-rabbit-mq-service
      RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}
    security_opt:
      - no-new-privileges:true
    depends_on:
      - vro-api-postgres-service
      - vro-api-rabbit-mq-service
      - vro-api-redis-service
      - db-init
      - assess-claim-dc7101
      - assess-claim-dc6602
      - pdf-generator
    networks:
      - internal
      - external
    restart: on-failure:5

  assess-claim-dc7101:
    image: va/abd_vro-assessclaimdc7101:latest
    environment:
      RABBITMQ_PLACEHOLDERS_HOST: vro-api-rabbit-mq-service
      RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}
    security_opt:

      - no-new-privileges:true
    depends_on:
      vro-api-rabbit-mq-service:
        condition: service_healthy
    networks:
      - internal

  assess-claim-dc6602:
    image: va/abd_vro-assessclaimdc6602:latest
    environment:
      RABBITMQ_PLACEHOLDERS_HOST: vro-api-rabbit-mq-service
      RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}
    security_opt:
      - no-new-privileges:true
    depends_on:
      vro-api-rabbit-mq-service:
        condition: service_healthy
    networks:
      - internal
    restart: on-failure:5

  pdf-generator:
    image: va/abd_vro-pdfgenerator:latest
    environment:
      RABBITMQ_PLACEHOLDERS_HOST: vro-api-rabbit-mq-service
      RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}
      REDIS_PLACEHOLDERS_HOST: vro-api-redis-service
      REDIS_PLACEHOLDERS_PASSWORD: ${REDIS_PLACEHOLDERS_PASSWORD}
    security_opt:
      - no-new-privileges:true
    depends_on:
      vro-api-redis-service:
        condition: service_started
      vro-api-rabbit-mq-service:
        condition: service_healthy
    networks:
      - internal
    restart: on-failure:5

  service-data-access:
    image: va/abd_vro-service-data-access:latest
    environment:
      RABBITMQ_PLACEHOLDERS_HOST: vro-api-rabbit-mq-service
      RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}
      LH_PRIVATE_KEY: ${LH_PRIVATE_KEY}
      LH_ACCESS_CLIENT_ID: ${LH_ACCESS_CLIENT_ID}
      LH_ASSERTION_URL: ${LH_ASSERTION_URL}
      LH_TOKEN_URL: ${LH_TOKEN_URL}
      LH_FHIR_URL: ${LH_FHIR_URL}
    security_opt:
      - no-new-privileges:true
    depends_on:
      vro-api-rabbit-mq-service:
        condition: service_healthy
    networks:
      - internal
    restart: on-failure:5
