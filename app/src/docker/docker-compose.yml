version: '3.9'

networks:
  internal:
  external:

volumes:
  pgdata:
  tracking:

# Reusable blocks
# https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd

x-common-vars: &common-vars
  # ENV determines which configuration settings to use.
  ENV: ${ENV:-local}

x-mas-vars: &mas-vars
  MAS_API_AUTH_CLIENTID: ${MAS_API_AUTH_CLIENTID}
  MAS_API_AUTH_CLIENT_SECRET: ${MAS_API_AUTH_CLIENT_SECRET}
  MAS_API_AUTH_TOKEN_URI: ${MAS_API_AUTH_TOKEN_URI}
  MAS_API_AUTH_SCOPE: ${MAS_API_AUTH_SCOPE}
  MAS_API_BAS_URL: ${MAS_API_BAS_URL}
  MAS_COLLECTION_ANNOTS_PATH: ${MAS_COLLECTION_ANNOTS_PATH}
  MAS_COLLECTION_STATUS_PATH: ${MAS_COLLECTION_STATUS_PATH}
  MAS_CREATE_EXAM_ORDER_PATH: ${MAS_CREATE_EXAM_ORDER_PATH}
  SLACK_EXCEPTION_WEBHOOK: ${SLACK_EXCEPTION_WEBHOOK}
  LH_API_AUTH_URL: ${LH_API_AUTH_URL}
  VRO_AUD_URL: ${VRO_AUD_URL}
  LH_VRO_API_KEY: ${LH_VRO_API_KEY}
  VALIDATE_TOKEN: ${VALIDATE_TOKEN}

x-postgres-vars: &postgres-vars
  POSTGRES_URL: jdbc:postgresql://postgres-service:5432/vro
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_SCHEMA: claims

x-redis-placeholder-vars: &redis-placeholder-vars
  REDIS_PLACEHOLDERS_HOST: redis-service
  REDIS_PLACEHOLDERS_PASSWORD: ${REDIS_PLACEHOLDERS_PASSWORD}

x-rabbitmq-placeholder-vars: &rabbitmq-placeholder-vars
  RABBITMQ_PLACEHOLDERS_HOST: rabbitmq-service
  RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
  RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}

x-rabbitmq-client-vars: &rabbitmq-client-vars
  RABBITMQ_PORT: 5672
  RABBITMQ_RETRY_LIMIT: 3
  RABBITMQ_TIMEOUT: 10800

x-common-security-opt: &common-security-opt
  security_opt:
    - no-new-privileges:true

x-common-sde-security: &common-sde-security
  ulimits:
    nproc: 65535

x-python-healthcheck: &python-healthcheck
  healthcheck:
    test: ["CMD-SHELL", "pgrep python || exit 1"]
    interval: 10s
    timeout: 5s
    retries: 5

services:
  # Containers with the `-service` suffix are need by the VRO app.
  # Containers with the `svc-` prefix are microservices to support domain workflows.
  # Containers with the `mock-` prefix are used for development and testing.

  rabbitmq-service:
    image: rabbitmq:3-management
    hostname: rabbitmq-service
    # Specifying user to reduce/eliminate startup error about erlang.cookie
    # based on https://github.com/docker-library/rabbitmq/issues/318
    user: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 30
    expose:
      - "5672"
      - "15672"
    networks:
      - internal
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}

  redis-service:
    image: redis
    hostname: redis-service
    expose:
      - "6379"
    networks:
      - internal
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PLACEHOLDERS_PASSWORD}

  postgres-service:
    image: va/abd_vro-postgres
    hostname: postgres-service
    healthcheck:
      test: "pg_isready -U $$FLYWAY_USER -d $$FLYWAY_DB"
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_SUPER_USER}
      POSTGRES_PASSWORD: ${POSTGRES_SUPER_PASSWORD}
      FLYWAY_USER: ${POSTGRES_FLYWAY_USER}
      FLYWAY_PASSWORD: ${POSTGRES_FLYWAY_PASSWORD}
      FLYWAY_DB: ${POSTGRES_DB}
      PGDATA: /persist/postgres/pgdata
    volumes:
      - pgdata:/persist/postgres
    networks:
      - internal
# NOTE, security favors removing external access from the database container
# This external access to the DB is enabled only for non-production environments.
      - external
    ports:
      - "5432:5432"

  db-init:
    image: va/abd_vro-db-init:latest
    depends_on:
      postgres-service:
        condition: service_healthy
    networks:
      - internal
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres-service:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_FLYWAY_USER}
      FLYWAY_PASSWORD: ${POSTGRES_FLYWAY_PASSWORD}
      FLYWAY_SCHEMA: ${POSTGRES_SCHEMA}
      FLYWAY_PLACEHOLDERS_USERNAME: ${POSTGRES_USER}
      FLYWAY_PLACEHOLDERS_DB_NAME: ${POSTGRES_DB}
      FLYWAY_PLACEHOLDERS_SCHEMA_NAME: ${POSTGRES_SCHEMA}
      FLYWAY_PLACEHOLDERS_USER_PASSWORD: ${POSTGRES_PASSWORD}

  app:
    image: va/abd_vro-app:latest
    <<: *common-security-opt
    <<: *common-sde-security
    hostname: app
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      # ENV=local causes application-local.yml (and application-nonprod.yml) to be used, in addition to the default application.yml
      # PERSIST_TRACKING_FOLDER is necessary for local testing when ENV=dev or qa
      <<: *common-vars
      <<: *rabbitmq-placeholder-vars
      <<: *redis-placeholder-vars
      <<: *postgres-vars
      <<: *mas-vars
      PERSIST_TRACKING_FOLDER: /persist/tracking
      BIP_CLAIM_USERID: ${BIP_CLAIM_USERID}
      BIP_CLAIM_SECRET: ${BIP_CLAIM_SECRET}
      BIP_EVIDENCE_USERID: ${BIP_EVIDENCE_USERID}
      BIP_EVIDENCE_SECRET: ${BIP_EVIDENCE_SECRET}
      BIP_TRUSTSTORE: ${BIP_TRUSTSTORE}
      BIP_PASSWORD: ${BIP_PASSWORD}
      BIP_KEYSTORE: ${BIP_KEYSTORE}
      BIP_CLAIM_URL: "mock-bip-claims-api:8097"
      BIP_EVIDENCE_URL: "mock-bip-ce-api:8094"
    depends_on:
      postgres-service:
        condition: service_healthy
      rabbitmq-service:
        condition: service_healthy
      redis-service:
        condition: service_started
      db-init:
        condition: service_started
    volumes:
      # path needs to be consistent with PERSIST_TRACKING_FOLDER value above
      - tracking:/persist/tracking
    networks:
      - internal
      - external

  workflows-xample:
    image: va/abd_vro-workflows-xample:latest
    <<: *common-security-opt
    <<: *common-sde-security
    profiles: ["all","xample"]
    environment:
      <<: *redis-placeholder-vars
      <<: *rabbitmq-placeholder-vars
      <<: *postgres-vars
    depends_on:
      postgres-service:
        condition: service_healthy
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-xample-j:
    image: va/abd_vro-svc-xample-j:latest
    <<: *common-security-opt
    <<: *common-sde-security
    profiles: ["all","svc","xample"]
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      postgres-service:
        condition: service_healthy
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc7101:
    profiles: ["all","svc","assessor","v2"]
    image: va/abd_vro-assessclaimdc7101:latest
    <<: *common-security-opt
    <<: *common-sde-security
    <<: *python-healthcheck
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc6602:
    profiles: ["all","svc","assessor","v2"]
    image: va/abd_vro-assessclaimdc6602:latest
    <<: *common-security-opt
    <<: *common-sde-security
    <<: *python-healthcheck
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc6602v2:
    profiles: ["all","svc","assessor","prototype"]
    image: va/abd_vro-assessclaimdc6602v2:latest
    <<: *common-security-opt
    <<: *common-sde-security
    <<: *python-healthcheck
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-cancer:
    profiles: ["all","svc","assessor","prototype"]
    image: va/abd_vro-assessclaimcancer:latest
    <<: *common-security-opt
    <<: *common-sde-security
    <<: *python-healthcheck
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc6510:
    profiles: ["all","svc","assessor","prototype"]
    image: va/abd_vro-assessclaimdc6510:latest
    <<: *common-security-opt
    <<: *common-sde-security
    <<: *python-healthcheck
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-assessor-dc6522:
    profiles: ["all","svc","assessor","prototype"]
    image: va/abd_vro-assessclaimdc6522:latest
    <<: *common-security-opt
    <<: *common-sde-security
    <<: *python-healthcheck
    environment:
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-pdf-generator:
    profiles: ["all","svc","pdfgen"]
    image: va/abd_vro-pdfgenerator:latest
    <<: *common-security-opt
    <<: *common-sde-security
    <<: *python-healthcheck
    environment:
      MODE: "docker"
      <<: *redis-placeholder-vars
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      redis-service:
        condition: service_started
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-lighthouse-api:
    profiles: ["all","svc","lh"]
    image: va/abd_vro-service-data-access:latest
    <<: *common-security-opt
    <<: *common-sde-security
    environment:
      # ENV=local causes application-local.properties to be used, in addition to the default application.properties
      <<: *common-vars
      <<: *rabbitmq-placeholder-vars
      LH_PRIVATE_KEY: ${LH_PRIVATE_KEY}
      LH_ACCESS_CLIENT_ID: ${LH_ACCESS_CLIENT_ID}
    depends_on:
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  svc-feature-toggle:
    profiles: ["all","svc","feature-toggle"]
    image: va/abd_vro-featuretoggle:latest
    <<: *common-security-opt
    <<: *common-sde-security
    environment:
      <<: *redis-placeholder-vars
      <<: *rabbitmq-placeholder-vars
      <<: *rabbitmq-client-vars
    depends_on:
      redis-service:
        condition: service_started
      rabbitmq-service:
        condition: service_healthy
    networks:
      - internal

  console:
    profiles: ["all","console"]
    image: va/abd_vro-console:latest
    # <<: *common-security-opt
    <<: *common-sde-security
    # stdin and tty are needed for user interaction
    stdin_open: true
    tty: true
    environment:
      <<: *redis-placeholder-vars
      <<: *rabbitmq-placeholder-vars
      <<: *postgres-vars
    depends_on:
      postgres-service:
        condition: service_healthy
      rabbitmq-service:
        condition: service_healthy
      redis-service:
        condition: service_started
      db-init:
        condition: service_started
    volumes:
      - pgdata:/persist/postgres
      - tracking:/persist/tracking
    networks:
      - internal

  mock-bip-ce-api:
    profiles: ["all","mock","bip","v2-mocks"]
    image: va/abd_vro-mock-bip-ce-api:latest
    <<: *common-security-opt
    <<: *common-sde-security
    hostname: mock-bip-ce-api
    ports:
      - "8094:8094"
# health check is on 8080 and doesn't need to be exposed - "8095:8095"
      - "8096:8096"
    environment:
      <<: *common-vars
      BIP_EVIDENCE_USERID: ${BIP_EVIDENCE_USERID}
      BIP_EVIDENCE_SECRET: ${BIP_EVIDENCE_SECRET}
      BIP_EVIDENCE_ISS: ${BIP_EVIDENCE_ISS}
      BIP_APPLICATION_ID: ${BIP_APPLICATION_ID}
      BIP_TRUSTSTORE: ${BIP_TRUSTSTORE}
      BIP_KEYSTORE: ${BIP_KEYSTORE}
    networks:
      - internal

  mock-bip-claims-api:
    profiles: ["all","mock","bip","v2-mocks"]
    image: va/abd_vro-mock-bip-claims-api:latest
    <<: *common-security-opt
    <<: *common-sde-security
    hostname: mock-bip-claims-api
    ports:
      - "8097:8097"
# health check is on 8080 and doesn't need to be exposed - "8098:8098"
      - "8099:8099"
    environment:
      <<: *common-vars
      BIP_CLAIM_USERID: ${BIP_CLAIM_USERID}
      BIP_CLAIM_SECRET: ${BIP_CLAIM_SECRET}
      BIP_CLAIM_ISS: ${BIP_CLAIM_ISS}
      BIP_APPLICATION_ID: ${BIP_APPLICATION_ID}
      BIP_TRUSTSTORE: ${BIP_TRUSTSTORE}
      BIP_KEYSTORE: ${BIP_KEYSTORE}
    networks:
      - internal

  mock-mas-api:
    profiles: ["all","mock","mas","v2-mocks"]
    image: va/abd_vro-mock-mas-api:latest
    <<: *common-security-opt
    <<: *common-sde-security
    hostname: mock-mas-api
    ports:
      - "9001:9001"
# health check is on 8080 and doesn't need to be exposed - "9002:9002"
    environment:
      <<: *common-vars
      MAS_API_AUTH_CLIENTID: ${MAS_API_AUTH_CLIENTID}
      MAS_API_AUTH_CLIENT_SECRET: ${MAS_API_AUTH_CLIENT_SECRET}
      MAS_API_AUTH_TOKEN_URI: ${MAS_API_AUTH_TOKEN_URI}
      MAS_API_AUTH_SCOPE: ${MAS_API_AUTH_SCOPE}
      MAS_API_BAS_URL: ${MAS_API_BAS_URL}
      MAS_COLLECTION_ANNOTS_PATH: ${MAS_COLLECTION_ANNOTS_PATH}
      MAS_COLLECTION_STATUS_PATH: ${MAS_COLLECTION_STATUS_PATH}
      MAS_CREATE_EXAM_ORDER_PATH: ${MAS_CREATE_EXAM_ORDER_PATH}
    networks:
      - internal

  mock-lighthouse-api:
    profiles: ["all","mock","lh","v2-mocks"]
    image: va/abd_vro-mock-lighthouse-api:latest
    <<: *common-security-opt
    <<: *common-sde-security
    hostname: mock-lighthouse-api
    environment:
      # ENV=local causes application-local.properties to be used, in addition to the default application.properties
      <<: *common-vars
      LH_PRIVATE_KEY: ${LH_PRIVATE_KEY}
      LH_ACCESS_CLIENT_ID: ${LH_ACCESS_CLIENT_ID}
    networks:
      - internal

  mock-slack:
    profiles: ["all","mock","lh","v2-mocks"]
    image: va/abd_vro-mock-slack:latest
    <<: *common-security-opt
    <<: *common-sde-security
    hostname: mock-slack
    ports:
      - "9008:9008"
# health check is on 8080 and doesn't need to be exposed - "9009:9009"
    environment:
      # ENV=local causes application-local.properties to be used, in addition to the default application.properties
      <<: *common-vars
    networks:
      - internal
