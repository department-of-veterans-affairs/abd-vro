version: '3.9'

networks:
  # Creates `vro_intranet` network if env variable COMPOSE_PROJECT_NAME=vro
  intranet:

volumes:
  # Volumes to simulate persistent volumes in LHDI deployment environments
  pgdata:
  tracking:
  # Create the following volumes so that they have recognizable names rather than UUIDs
  var_pgdata:
  var_rabbitmq:
  var_redis:

# Reusable blocks
# https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd
# Also note https://yaml.org/type/merge.html

x-common-vars: &common-vars
  # ENV determines which configuration settings to use.
  ENV: ${ENV:-local}

x-api-vars: &api-vars
  SLACK_EXCEPTION_WEBHOOK: ${SLACK_EXCEPTION_WEBHOOK}
  LH_API_AUTH_URL: ${LH_API_AUTH_URL}
  VRO_AUD_URL: ${VRO_AUD_URL}
  LH_VRO_API_KEY: ${LH_VRO_API_KEY}

x-postgres-vars: &postgres-vars
  POSTGRES_URL: jdbc:postgresql://postgres-service:5432/vro
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_SCHEMA: claims

x-redis-placeholder-vars: &redis-placeholder-vars
  REDIS_PLACEHOLDERS_HOST: redis-service
  REDIS_PLACEHOLDERS_PASSWORD: ${REDIS_PLACEHOLDERS_PASSWORD}

x-rabbitmq-placeholder-vars: &rabbitmq-placeholder-vars
  RABBITMQ_PLACEHOLDERS_HOST: rabbitmq-service
  RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
  RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}

# Don't start VRO microservices until VRO Platform services are up
x-svc-depends-on: &svc-depends-on
  rabbitmq-service:
    condition: service_healthy
  postgres-service:
    condition: service_healthy
  redis-service:
    condition: service_started

x-common-security-opt: &common-security-opt
  security_opt:
    - no-new-privileges:true

x-common-sde-security: &common-sde-security
  ulimits:
    nproc: 65535

x-image-platform: &image-platform
  platform: ${VRO_DOCKER_IMAGE_PLATFORM}

services:
  # Containers with the `-service` suffix are need by the VRO app.
  # Containers with the `svc-` prefix are microservices to support domain workflows.
  # Containers with the `mock-` prefix are used for development and testing.

  rabbitmq-service:
    image: rabbitmq:3-management
    <<: *image-platform
    # Specifying user to reduce/eliminate startup error about erlang.cookie
    # based on https://github.com/docker-library/rabbitmq/issues/318
    user: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - var_rabbitmq:/var/lib/rabbitmq
    networks:
      - intranet
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_PLACEHOLDERS_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}

  redis-service:
    image: redis
    <<: *image-platform
    volumes:
      - var_redis:/data
    networks:
      - intranet
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PLACEHOLDERS_PASSWORD}

  postgres-service:
    image: va/abd_vro-postgres
    healthcheck:
      test: "pg_isready -U $$FLYWAY_USER -d $$FLYWAY_DB"
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_SUPER_USER}
      POSTGRES_PASSWORD: ${POSTGRES_SUPER_PASSWORD}
      FLYWAY_USER: ${POSTGRES_FLYWAY_USER}
      FLYWAY_PASSWORD: ${POSTGRES_FLYWAY_PASSWORD}
      FLYWAY_DB: ${POSTGRES_DB}
      PGDATA: /persist/postgres/pgdata
    volumes:
      - pgdata:/persist/postgres
      - var_pgdata:/var/lib/postgresql/data
    networks:
      - intranet
    ports:
      - "5432:5432"

  db-init:
    image: va/abd_vro-db-init:latest
    depends_on:
      postgres-service:
        condition: service_healthy
    networks:
      - intranet
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres-service:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_FLYWAY_USER}
      FLYWAY_PASSWORD: ${POSTGRES_FLYWAY_PASSWORD}
      FLYWAY_SCHEMA: ${POSTGRES_SCHEMA}
      FLYWAY_PLACEHOLDERS_USERNAME: ${POSTGRES_USER}
      FLYWAY_PLACEHOLDERS_DB_NAME: ${POSTGRES_DB}
      FLYWAY_PLACEHOLDERS_SCHEMA_NAME: ${POSTGRES_SCHEMA}
      FLYWAY_PLACEHOLDERS_USER_PASSWORD: ${POSTGRES_PASSWORD}

  api-gateway:
    profiles: ["all","gateway"]
    image: va/abd_vro-api-gateway:latest
    <<: [*common-sde-security, *common-security-opt]
    ports:
      - "8060:8060"
      - "8061:8061"
    environment:
      <<: *common-vars
      VRO_APP_HOSTNAME: app
      # VRO_CC_HOSTNAME: cc-app
    networks:
      - intranet

  app:
    image: va/abd_vro-app:latest
    <<: [*common-sde-security, *common-security-opt]
    ports:
      - "8110:8110"
      - "8111:8111"
    environment:
      # ENV=local causes application-local.yml (and application-nonprod.yml) to be used, in addition to the default application.yml
      # PERSIST_TRACKING_FOLDER is necessary for local testing when ENV=dev or qa
      <<: [*api-vars, *postgres-vars, *redis-placeholder-vars, *rabbitmq-placeholder-vars, *common-vars]
      PERSIST_TRACKING_FOLDER: /persist/tracking
    depends_on:
      <<: *svc-depends-on
      db-init:
        condition: service_started
    volumes:
      # path needs to be consistent with PERSIST_TRACKING_FOLDER value above
      - tracking:/persist/tracking
    networks:
      - intranet

  svc-lighthouse-api:
    profiles: ["all","svc","lh"]
    image: va/abd_vro-svc-lighthouse-api:latest
    <<: [*common-sde-security, *common-security-opt]
    environment:
      # ENV=local causes application-local.properties to be used, in addition to the default application.properties
      <<: [*rabbitmq-placeholder-vars, *common-vars]
      LH_PRIVATE_KEY: ${LH_PRIVATE_KEY}
      LH_ACCESS_CLIENT_ID: ${LH_ACCESS_CLIENT_ID}
    depends_on:
      <<: *svc-depends-on
    networks:
      - intranet

  svc-bip-api:
    profiles: ["all", "svc", "bip"]
    environment:
      BIP_CLAIM_USERID: ${BIP_CLAIM_USERID}
      BIP_CLAIM_SECRET: ${BIP_CLAIM_SECRET}
      BIP_EVIDENCE_USERID: ${BIP_EVIDENCE_USERID}
      BIP_EVIDENCE_SECRET: ${BIP_EVIDENCE_SECRET}
      BIP_TRUSTSTORE: ${BIP_TRUSTSTORE}
      BIP_PASSWORD: ${BIP_PASSWORD}
      BIP_KEYSTORE: ${BIP_KEYSTORE}
      BIP_CLAIM_URL: "mock-bip-claims-api:20300"
      BIP_EVIDENCE_URL: "mock-bip-ce-api:20310"


  svc-bgs-api:
    profiles: ["all","svc","bgs"]
    image: va/abd_vro-svc-bgs-api:latest
    <<: [*common-sde-security, *common-security-opt]
    environment:
      <<: [*rabbitmq-placeholder-vars, *common-vars]
    depends_on:
      <<: *svc-depends-on
    networks:
      - intranet

  svc-hoppy-usage:
    image: va/abd_vro-svc-hoppy-usage:latest
    <<: [*common-sde-security, *common-security-opt]
    environment:
      <<: [*rabbitmq-placeholder-vars, *common-vars]
    depends_on:
      <<: *svc-depends-on
    networks:
      - intranet

  console:
    profiles: ["all","console"]
    image: va/abd_vro-console:latest
    # <<: *common-security-opt
    <<: *common-sde-security
    # stdin and tty are needed for user interaction
    stdin_open: true
    tty: true
    environment:
      <<: [*postgres-vars, *rabbitmq-placeholder-vars, *redis-placeholder-vars]
    depends_on:
      <<: *svc-depends-on
    volumes:
      - pgdata:/persist/postgres
      - tracking:/persist/tracking
    networks:
      - intranet
