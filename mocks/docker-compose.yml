version: '3.9'

# https://stackoverflow.com/questions/38088279/communication-between-multiple-docker-compose-projects
networks:
  # Put these mock services on the same `vro_intranet` network as VRO -- see app/src/docker/docker-compose.yml
  vro_intranet:
    # https://docs.docker.com/compose/networking/#use-a-pre-existing-network
    external: true

# Reusable blocks
# https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd
# Also note https://yaml.org/type/merge.html

x-common-vars: &common-vars
  # ENV determines which configuration settings to use.
  # ENV=local causes application-local.properties to be used, in addition to the default application.properties
  ENV: ${ENV:-local}

x-common-security-opt: &common-security-opt
  security_opt:
    - no-new-privileges:true

x-common-sde-security: &common-sde-security
  ulimits:
    nproc: 65535

# For port numbering convention, see https://github.com/department-of-veterans-affairs/abd-vro/wiki/Software-Conventions#port-numbers
# - 20NNx = mock service ports, where NN is an index
# - 20NN1 = health check port for mock service NN

services:
  # Containers with the `mock-` prefix are used for development and testing.

  mock-slack:
    profiles: ["all","slack"]
    image: va/vro_mocks-mock-slack:latest
    <<: [*common-sde-security, *common-security-opt]
    ports:
      - "20100:20100"
    environment:
      <<: *common-vars
    networks:
      - vro_intranet

  mock-lighthouse-api:
    profiles: ["all","lh"]
    image: va/vro_mocks-mock-lighthouse-api:latest
    <<: [*common-sde-security, *common-security-opt]
    ports:
      - "20200:20200"
    environment:
      <<: *common-vars
      LH_PRIVATE_KEY: ${LH_PRIVATE_KEY}
      LH_ACCESS_CLIENT_ID: ${LH_ACCESS_CLIENT_ID}
    networks:
      - vro_intranet

  mock-bie-kafka:
    profiles: ["all","kafka"]
    image: va/vro_mocks-mock-bie-kafka:latest
    <<: [*common-sde-security, *common-security-opt]
    # Port 9092 is for internal communication within the vro_intranet, and is needed for consuming/producing messages
    # within the vro_intranet docker network. In order to produce/consume messages outside the vro_intranet network,
    # the port 9094 is exposed for external communication with mock-bie-kafka from outside the vro_intranet. Advertised
    # listeners are configured to consume messages on both ports.
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      <<: *common-vars
      # For debugging
      BITNAMI_DEBUG: 'true'
      KAFKA_ADVERTISED_HOST_NAME: mock-bie-kafka
      # Purpose of EXTERNAL port 9094: see https://github.com/bitnami/containers/blob/main/bitnami/kafka/README.md#accessing-apache-kafka-with-internal-and-external-clients
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://mock-bie-kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_SSL,INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_MESSAGE_MAX_BYTES: "1000000"

      # Kafka Kraft configurations
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@mock-bie-kafka:9093

      # https://github.com/bitnami/containers/blob/main/bitnami/kafka/README.md
      # https://stackoverflow.com/a/72018409
      # Caution: Empty string '' and "" don't work; however ' ' or " " does work
      KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "

      # For development without having to deal with connecting via SSL, use port 9092 or do the following.
      # To disable SSL, uncomment the following and comment out the next SSL section
      # ALLOW_PLAINTEXT_LISTENER: 'yes'
      # KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

      # For SASL for client communications -- see "Security" section of https://hub.docker.com/r/bitnami/kafka/
      KAFKA_CLIENT_USERS: USERNAME
      KAFKA_CLIENT_PASSWORDS: PASSWORD
      KAFKA_CLIENT_LISTENER_NAME: INTERNAL
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN

      # Set up SSL -- see "Security" section of https://hub.docker.com/r/bitnami/kafka/
    # PEM https://medium.com/analytics-vidhya/how-to-use-pem-certificates-with-apache-kafka-f3b444a00816
      KAFKA_TLS_TYPE: JKS
      KAFKA_CERTIFICATE_PASSWORD: mockKafka

    volumes:
      # scripts/setenv.sh creates jks files from env variables
      # keystore is unneeded only truststore https://dsva.slack.com/archives/C04U8GESRT7/p1708456986385019?thread_ts=1706878417.546749&cid=C04U8GESRT7
      - './mock-bie-kafka/kafka.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro'
      - './mock-bie-kafka/kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro'
    networks:
      - vro_intranet

  mock-bip-claims-api:
    profiles: ["all","bip"]
    image: va/vro_mocks-mock-bip-claims-api:latest
    <<: [*common-sde-security, *common-security-opt]
    ports:
      - "20300:20300"
      - "20306:20306"
    environment:
      <<: *common-vars
      BIP_CLAIM_USERID: ${BIP_CLAIM_USERID}
      BIP_CLAIM_SECRET: ${BIP_CLAIM_SECRET}
      BIP_TRUSTSTORE: ${BIP_TRUSTSTORE}
      BIP_KEYSTORE: ${BIP_KEYSTORE}
    networks:
      - vro_intranet

  mock-bip-ce-api:
    profiles: ["all"]
    image: va/vro_mocks-mock-bip-ce-api:latest
    <<: [*common-sde-security, *common-security-opt]
    ports:
      - "20310:20310"
      - "20316:20316"
    environment:
      <<: *common-vars
      BIP_EVIDENCE_USERID: ${BIP_EVIDENCE_USERID}
      BIP_EVIDENCE_SECRET: ${BIP_EVIDENCE_SECRET}
#      BIP_APPLICATION_ID: ${BIP_APPLICATION_ID}
      BIP_TRUSTSTORE: ${BIP_TRUSTSTORE}
      BIP_KEYSTORE: ${BIP_KEYSTORE}
    networks:
      - vro_intranet

  mock-bgs-api:
    profiles: ["all","bgs"]
    image: va/vro_mocks-mock-bgs-api:latest
    <<: [*common-sde-security, *common-security-opt]
    ports:
      - "20500:8080"
    environment:
      <<: *common-vars
    networks:
      - vro_intranet

#  mock-mas-api:
#    profiles: ["all","mas"]
#    image: va/vro_mocks-mock-mas-api:latest
#    <<: [*common-sde-security, *common-security-opt]
#    ports:
#      - "20400:20400"
#    environment:
#      <<: *common-vars
#      MAS_API_AUTH_CLIENTID: ${MAS_API_AUTH_CLIENTID}
#      MAS_API_AUTH_CLIENT_SECRET: ${MAS_API_AUTH_CLIENT_SECRET}
#      MAS_API_AUTH_TOKEN_URI: ${MAS_API_AUTH_TOKEN_URI}
##      MAS_API_AUTH_SCOPE: ${MAS_API_AUTH_SCOPE}
#      MAS_API_BASE_URL: ${MAS_API_BASE_URL}
##      MAS_COLLECTION_ANNOTS_PATH: ${MAS_COLLECTION_ANNOTS_PATH}
##      MAS_COLLECTION_STATUS_PATH: ${MAS_COLLECTION_STATUS_PATH}
##      MAS_CREATE_EXAM_ORDER_PATH: ${MAS_CREATE_EXAM_ORDER_PATH}
#    networks:
#      - vro_intranet
