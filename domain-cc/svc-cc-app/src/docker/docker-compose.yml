version: '3.9'

networks:
  # Put these services on the same `vro_intranet` network as VRO -- see app/src/docker/docker-compose.yml
  vro_intranet:
    # https://docs.docker.com/compose/networking/#use-a-pre-existing-network
    external: false

# Reusable blocks
# https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd
# Also note https://yaml.org/type/merge.html

x-common-vars: &common-vars
  # ENV determines which configuration settings to use.
  ENV: ${ENV:-local}

x-postgres-vars: &postgres-vars
  POSTGRES_URL: jdbc:postgresql://postgres-service:5432/vro
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_SCHEMA: claims

x-redis-placeholder-vars: &redis-placeholder-vars
  REDIS_PLACEHOLDERS_HOST: redis-service
  REDIS_PLACEHOLDERS_PASSWORD: ${REDIS_PLACEHOLDERS_PASSWORD}

x-rabbitmq-placeholder-vars: &rabbitmq-placeholder-vars
  RABBITMQ_PLACEHOLDERS_HOST: rabbitmq-service
  RABBITMQ_PLACEHOLDERS_USERNAME: ${RABBITMQ_PLACEHOLDERS_USERNAME}
  RABBITMQ_PLACEHOLDERS_USERPASSWORD: ${RABBITMQ_PLACEHOLDERS_USERPASSWORD}

x-rabbitmq-client-vars: &rabbitmq-client-vars
  RABBITMQ_PORT: 5672
  RABBITMQ_RETRY_LIMIT: 3
  RABBITMQ_TIMEOUT: 10800

x-common-security-opt: &common-security-opt
  security_opt:
    - no-new-privileges:true

x-common-sde-security: &common-sde-security
  ulimits:
    nproc: 65535

services:
  # Containers with the `svc-` prefix are microservices to support domain workflows.

  svc-cc-api:
    image: va/abd_vro-svc-cc-app:latest
    <<: [*common-sde-security, *common-security-opt]
    networks:
      - vro_intranet

#  svc-cc-rabbitmq:
#    image: va/abd_vro-svc-cc-app:latest
#    <<: [*common-sde-security, *common-security-opt]
#    networks:
#      - vro_intranet
