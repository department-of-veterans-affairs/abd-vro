openapi: 3.0.1
info:
  description: "<p>This API provides functionality around the C&P Benefit Claim and\
    \ seeks to provide simple and concise mechanisms to create and view claim information.\
    \ The functionality falls within two primary areas.<br/> <ul><li>Claim - The ability\
    \ to create, list, and view summaries for a Veteran's claims.</li><li>Contention\
    \ - The ability to create, update, delete, and view contention summaries for a\
    \ given claim.</li></ul> </p> <p>The consumers of this service are expected to\
    \ participate with other authoritative systems in the VA context. A key design\
    \ principle with the Claims API is to avoid the one-call-does-everything pattern\
    \ that has proven to reduce reusability of services and to stovepipe functionality\
    \ for individual use case. Within the BIP service paradigm, this API would be\
    \ considered a Process API, designed to encapsulate the specific domain actions\
    \ around claims.</p>"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.va.gov/terms-of-service
  title: Claims API
  version: 3.0.0
externalDocs:
  description: Complete documentation describing how to use this API
  url: https://github.ec.va.gov/EPMO/bip-vetservices-claims
servers:
- url: "/api/{version}"
  variables:
    version:
      default: v1
      enum:
      - v1
      - v2
tags:
- description: Token Resource
  name: token
- description: A tag that organizes resources directly associated with a claim.
  name: claims
- description: A tag that organizes resources for contentions within a given claim.
  name: contentions
- description: A tag that organizes resources for a contention event within a given
    claim.
  name: contentionEvents
- description: A tag that organizes resources for contention/tracked item associations
    within a given claim.
  name: contentionTrackedItemAssociations
- description: A tag that organizes resources dedicated solely as lookup data
  name: lookup
- description: Feature Flag Resource
  name: featureflag
paths:
  /claims/{claimId}:
    description: The resource representing a specific claim.
    get:
      description: Get the claim summary for a claim ID. This is the use case for
        getting claim information regardless of veteran.
      operationId: getClaimById
      parameters:
      - description: The CorpDB BNFT_CLAIM_ID
        examples:
          oneId:
            summary: To get a single claim summary
            value: 9666958
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDetailResponse'
          description: Details for the given claim id.
        "401":
          content:
            application/problem+json:
              example:
                messages:
                - key: UNAUTHORIZED
                  severity: ERROR
                  status: 401
                  text: No JWT Token in Header.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: The authentication mechanism failed and hence access is forbidden.
        "404":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.vetservices.claims.claim.not.found
                  severity: ERROR
                  status: 404
                  text: Claim not found
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: Could not derive claim from request path
        "500":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.general.exception
                  severity: ERROR
                  status: 500
                  text: Unexpected exception.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: "There was an error encountered processing the Request.  Response\
            \ will contain a  \"messages\" element that will provide further information\
            \ on the error.  Please retry.  If problem persists, please contact support\
            \ with a copy of the Response."
      security:
      - bearerAuth: []
      summary: "Access claim summary information for a claim, using the claimId"
      tags:
      - claims
      x-accepts: application/json
      x-tags:
      - tag: claims
  /claims/{claimId}/lifecycle_status:
    description: The resource representing a specific claim's lifecycle status.
    get:
      operationId: getClaimLifecycleStatuses
      parameters:
      - description: The CorpDB BNFT_CLAIM_ID
        examples:
          ID 1:
            value: 9729039
          ID 2:
            value: 9730579
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Whether or not to include historical lifecycle status updates.
          Default is false.
        explode: true
        in: query
        name: include_history
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                lifecycleStatuses:
                - lifecycleStatusTypeCode: RFD
                  lifecycleStatusTypeName: Ready for Decision
                  lifecycleStatusReasonTypeCode: "54"
                  lifecycleStatusReasonTypeName: Worked in VETSNET Awards
                  reasonDetailTypeCode: 03B
                  reasonDetailTypeName: Financial Issues
                  reasonText: Reason Text
                  changedDate: 2009-10-27T00:00:00-05:00
                  closedDate: 2009-10-27T00:00:00-05:00
              schema:
                $ref: '#/components/schemas/ClaimLifecycleStatusesResponse'
          description: The suspense status list for an existing claim.
        "400":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.validator.method.argument.not.valid
                  severity: ERROR
                  status: 400
                  text: Argument not valid.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: There was an error encountered processing the Request.  Response
            will contain a  "messages" element that will provide further information
            on the error.  This request shouldn't be retried until corrected.
        "401":
          content:
            application/problem+json:
              example:
                messages:
                - key: UNAUTHORIZED
                  severity: ERROR
                  status: 401
                  text: No JWT Token in Header.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: The authentication mechanism failed and hence access is forbidden.
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: Precondition Failed
        "500":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.general.exception
                  severity: ERROR
                  status: 500
                  text: Unexpected exception.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: "There was an error encountered processing the Request.  Response\
            \ will contain a  \"messages\" element that will provide further information\
            \ on the error.  Please retry.  If problem persists, please contact support\
            \ with a copy of the Response."
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: Resource not implemented
      security:
      - bearerAuth: []
      summary: Get the lifecycle status(es) of an existing claim
      tags:
      - claims
      x-accepts: application/json
      x-tags:
      - tag: claims
    put:
      description: Update the lifecycle status of an existing claim
      externalDocs:
        description: Claim Update documentation
        url: https://github.ec.va.gov/EPMO/bip-vetservices-claims/blob/development/bip-vetservices-claims-docs/claim-updates.md
      operationId: updateClaimLifecycleStatus
      parameters:
      - description: The CorpDB BNFT_CLAIM_ID
        examples:
          oneId:
            value: 9729039
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClaimLifecycleStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClaimLifecycleStatusResponse'
          description: Updated
        "400":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.validator.method.argument.not.valid
                  severity: ERROR
                  status: 400
                  text: Argument not valid.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: There was an error encountered processing the Request.  Response
            will contain a  "messages" element that will provide further information
            on the error.  This request shouldn't be retried until corrected.
        "401":
          content:
            application/problem+json:
              example:
                messages:
                - key: UNAUTHORIZED
                  severity: ERROR
                  status: 401
                  text: No JWT Token in Header.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: The authentication mechanism failed and hence access is forbidden.
        "404":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.vetservices.claims.claim.not.found
                  severity: ERROR
                  status: 404
                  text: Claim not found
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: Could not derive claim from request path
        "500":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.general.exception
                  severity: ERROR
                  status: 500
                  text: Unexpected exception.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: "There was an error encountered processing the Request.  Response\
            \ will contain a  \"messages\" element that will provide further information\
            \ on the error.  Please retry.  If problem persists, please contact support\
            \ with a copy of the Response."
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: Resource not implemented
      security:
      - bearerAuth: []
      summary: Update the lifecycle status of an existing claim
      tags:
      - claims
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: claims
  /claims/{claimId}/contentions:
    description: The resource representing contentions within a given claim.
    get:
      operationId: getContentionsForClaim
      parameters:
      - description: The CorpDB BNFT_CLAIM_ID
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          example: 9666422
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentionSummariesResponse'
          description: A list of contention summary objects
        "204":
          content:
            application/json: {}
          description: No contentions found for the claim
        "401":
          content:
            application/problem+json:
              example:
                messages:
                - key: UNAUTHORIZED
                  severity: ERROR
                  status: 401
                  text: No JWT Token in Header.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: The authentication mechanism failed and hence access is forbidden.
        "404":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.vetservices.claims.claim.not.found
                  severity: ERROR
                  status: 404
                  text: Claim not found
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: Could not derive claim from request path
        "500":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.general.exception
                  severity: ERROR
                  status: 500
                  text: Unexpected exception.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: "There was an error encountered processing the Request.  Response\
            \ will contain a  \"messages\" element that will provide further information\
            \ on the error.  Please retry.  If problem persists, please contact support\
            \ with a copy of the Response."
      security:
      - bearerAuth: []
      summary: List summaries for contentions associated with a given claim.
      tags:
      - contentions
      x-accepts: application/json
      x-tags:
      - tag: contentions
    put:
      operationId: updateContentions
      parameters:
      - description: The CorpDB BNFT_CLAIM_ID
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          example: 9666422
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContentionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContentionsResponse'
          description: Response indicates successful updates. May have messages with
            any warnings.
        "400":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.validator.method.argument.not.valid
                  severity: ERROR
                  status: 400
                  text: Argument not valid.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: There was an error encountered processing the Request.  Response
            will contain a  "messages" element that will provide further information
            on the error.  This request shouldn't be retried until corrected.
        "401":
          content:
            application/problem+json:
              example:
                messages:
                - key: UNAUTHORIZED
                  severity: ERROR
                  status: 401
                  text: No JWT Token in Header.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: The authentication mechanism failed and hence access is forbidden.
        "500":
          content:
            application/problem+json:
              example:
                messages:
                - key: bip.framework.global.general.exception
                  severity: ERROR
                  status: 500
                  text: Unexpected exception.
                  timestamp: 2019-08-29T18:40:22.766Z
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: "There was an error encountered processing the Request.  Response\
            \ will contain a  \"messages\" element that will provide further information\
            \ on the error.  Please retry.  If problem persists, please contact support\
            \ with a copy of the Response."
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: Resource not implemented
      security:
      - bearerAuth: []
      summary: Updates one or more contentions
      tags:
      - contentions
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: contentions
components:
  links: {}
  parameters:
    ClaimId:
      description: The CorpDB BNFT_CLAIM_ID
      explode: false
      in: path
      name: claimId
      required: true
      schema:
        example: 9666422
        format: int64
        type: integer
      style: simple
    ContentionId:
      description: The CorpDB cntntnId
      explode: false
      in: path
      name: contentionId
      required: true
      schema:
        example: 71773
        format: int64
        type: integer
      style: simple
    ContentionIds:
      description: The contention IDs to operate on.
      explode: false
      in: path
      name: contentionIds
      required: true
      schema:
        items:
          format: int64
          type: integer
        type: array
      style: simple
  responses:
    "400":
      content:
        application/problem+json:
          example:
            messages:
            - key: bip.framework.global.validator.method.argument.not.valid
              severity: ERROR
              status: 400
              text: Argument not valid.
              timestamp: 2019-08-29T18:40:22.766Z
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: There was an error encountered processing the Request.  Response
        will contain a  "messages" element that will provide further information on
        the error.  This request shouldn't be retried until corrected.
    "401":
      content:
        application/problem+json:
          example:
            messages:
            - key: UNAUTHORIZED
              severity: ERROR
              status: 401
              text: No JWT Token in Header.
              timestamp: 2019-08-29T18:40:22.766Z
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: The authentication mechanism failed and hence access is forbidden.
    "403":
      content:
        application/problem+json:
          example:
            messages:
            - key: bip.framework.not.authorized.exception
              severity: ERROR
              status: 403
              text: Access denied.
              timestamp: 2019-08-29T18:40:22.766Z
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: The request is not authorized.  Please verify credentials used
        in the request.
    "404":
      content:
        application/problem+json:
          example:
            messages:
            - key: bip.vetservices.claims.not.found
              severity: ERROR
              status: 404
              text: Resource not found
              timestamp: 2019-08-29T18:40:22.766Z
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: The requested resource could not be found.
    "418":
      content:
        application/problem+json:
          example:
            messages:
            - key: I_AM_A_TEAPOT
              severity: CLIENT ERROR
              status: 418
              text: I'm a teapot!
              timestamp: 2022-02-22T22:22:22.222Z
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: I'm a teapot.
    Claim404:
      content:
        application/problem+json:
          example:
            messages:
            - key: bip.vetservices.claims.claim.not.found
              severity: ERROR
              status: 404
              text: Claim not found
              timestamp: 2019-08-29T18:40:22.766Z
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: Could not derive claim from request path
    "500":
      content:
        application/problem+json:
          example:
            messages:
            - key: bip.framework.global.general.exception
              severity: ERROR
              status: 500
              text: Unexpected exception.
              timestamp: 2019-08-29T18:40:22.766Z
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: "There was an error encountered processing the Request.  Response\
        \ will contain a  \"messages\" element that will provide further information\
        \ on the error.  Please retry.  If problem persists, please contact support\
        \ with a copy of the Response."
    "501":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProviderResponse'
      description: Resource not implemented
  schemas:
    BenefitClaimType:
      $ref: '#/components/schemas/benefit_claim_type'
    ClaimDetailResponse:
      allOf:
      - $ref: '#/components/schemas/ProviderResponse'
      - $ref: '#/components/schemas/ClaimDetailResponse_allOf'
    ClaimSummary:
      description: "An object to summarize the data in a claim. A claim is a formal\
        \ request for benefits that is submitted by a Veteran, or by a person or organization\
        \ authorized to act on a Veteran's behalf."
      properties:
        summaryDateTime:
          format: date-time
          type: string
        lastModified:
          description: Date of the last time this object was modified
          format: date-time
          type: string
        claimId:
          description: The CorpDB BNFT_CLAIM_ID
          format: int64
          type: integer
        benefitClaimType:
          $ref: '#/components/schemas/benefit_claim_type'
        phase:
          $ref: '#/components/schemas/PhaseType'
        phaseLastChangedDate:
          format: date-time
          type: string
        claimLifecycleStatus:
          description: "Also called Lifecycle status. Describes the next type of work\
            \ that needs to be completed on a claim. Statuses are related to the lifecycle\
            \ in which the work will be completed, such as Rating Correction or Pending\
            \ Authorization."
          type: string
        completedDate:
          format: date-time
          type: string
        claimant:
          $ref: '#/components/schemas/Claimant'
        veteran:
          $ref: '#/components/schemas/Veteran'
        receivedDate:
          description: The date the claim was received.
          format: date-time
          type: string
        payeeTypeCode:
          description: "Number and label that indicates the person receiving a benefit,\
            \ such as Veteran or spouse."
          example: "010"
          type: string
        serviceTypeCode:
          description: The service type code of the claim
          example: CP
          type: string
        programTypeCode:
          description: The program type code of the claim
          example: CPL
          type: string
        endProductCode:
          description: "Modified end product code (including the increment/third digit\
            \ modifier). Part of the Benefits Delivery Network (BDN) Master Record\
            \ indicating the status conditions of the Veteran's pay record, in terms\
            \ of benefit payments."
          type: string
      title: ClaimSummary
      type: object
    ClaimDetail:
      allOf:
      - $ref: '#/components/schemas/ClaimSummary'
      - $ref: '#/components/schemas/ClaimDetail_allOf'
      description: "An object to provide more detailed data for a specific claim.\
        \ A claim is a formal request for benefits that is submitted by a Veteran,\
        \ or by a person or organization authorized to act on a Veteran's behalf."
      title: ClaimDetail
    ClaimLifecycleStatusesResponse:
      allOf:
      - $ref: '#/components/schemas/ProviderResponse'
      - $ref: '#/components/schemas/ClaimLifecycleStatusesResponse_allOf'
    Suspense:
      description: "The time during which a work item or claim is inactive or waiting\
        \ completion of an action from an outside entity, such as waiting for evidence\
        \ requested from the claimant or a third party. Receipt of the evidence will\
        \ lift the suspense and allow the claim to move forward through processing."
      properties:
        reason:
          description: "The explanation regarding a pause in claim processing, such\
            \ as waiting for a response to an information request. Many claim actions\
            \ have built-in suspense reasons that are either automatically recorded,\
            \ or selected from a list by the user."
          example: Pending Authorization
          type: string
        reasonCode:
          description: The suspense reason code.
          example: "024"
          type: string
        date:
          description: "Acts as a due date or reminder date for either a tracked item\
            \ or a claim. The claim suspense date will usually be the same as the\
            \ suspense date of the earliest, actionable tracked item."
          format: date-time
          type: string
        comment:
          example: Suspense Comment Example
          type: string
        changedDate:
          description: The date of this change to the suspense.
          format: date-time
          type: string
        changedBy:
          description: The userId of the user who changed the suspense.
          example: user123
          type: string
      title: Suspense
      type: object
    Lifecycle:
      description: Status updates for the lifecycle of a claim
      properties:
        lifecycleStatusTypeCode:
          description: Type code corresponding to BNFT_CLAIM_LC_STATUS_TYPE group
            type name in CorpDB
          example: RFD
          type: string
        lifecycleStatusTypeName:
          description: Type name corresponding to BNFT_CLAIM_LC_STATUS_TYPE group
            type name in CorpDB
          example: Ready for Decision
          type: string
        lifecycleStatusReasonTypeCode:
          description: Type code corresponding to LC_STATUS_REASON_TYPE group type
            name in CorpDB
          example: "54"
          type: string
        lifecycleStatusReasonTypeName:
          description: Type name corresponding to LC_STATUS_REASON_TYPE group type
            name in CorpDB
          example: Worked in VETSNET Awards
          type: string
        reasonDetailTypeCode:
          description: Type code corresponding to REASON_DETAIL_TYPE group type name
            in CorpDB
          example: 03B
          type: string
        reasonDetailTypeName:
          description: Type name corresponding to REASON_DETAIL_TYPE group type name
            in CorpDB
          example: Financial Issues
          type: string
        reasonText:
          description: Free-form LC status update reason
          example: Reason Text
          type: string
        changedDate:
          description: Date of the LC status update for the claim
          format: date-time
          type: string
        closedDate:
          description: Closed date for the claim
          format: date-time
          type: string
      title: Lifecycle
      type: object
    LimitedPoa:
      description: "Limited Power of Attorney (POA) representation. A Veteran Service\
        \ Organization (VSO) or other individual appointed by the Veteran or claimant\
        \ who represents their interests.Limited representation is only for a specific\
        \ claim, versus a general POA that can be associated with all claims for a\
        \ claimant."
      properties:
        veteranParticipantId:
          description: Participant ID of veteran
          example: 307405
          format: int64
          maximum: 999999999999999
          type: integer
        claimantParticipantId:
          description: Participant ID of claimant
          example: 307405
          format: int64
          maximum: 999999999999999
          type: integer
        poaParticipantId:
          description: Participant ID of limited POA
          example: 307405
          format: int64
          maximum: 999999999999999
          type: integer
        poaCode:
          description: Code of limited POA
          example: "6"
          type: string
        startDate:
          description: Start date of the POA representation for this claim
          format: date-time
          type: string
      title: LimitedPoa
      type: object
    ContentionSummariesResponse:
      allOf:
      - $ref: '#/components/schemas/ProviderResponse'
      - $ref: '#/components/schemas/ContentionSummariesResponse_allOf'
      title: ContentionSummariesResponse
    ContentionSummary:
      allOf:
      - $ref: '#/components/schemas/ExistingContention'
      - $ref: '#/components/schemas/ContentionSummary_allOf'
      title: ContentionSummary
    Contention:
      description: "A condition or diagnosis that a Veteran contends are the cause\
        \ of a current disability, and may qualify for benefits, if directly related\
        \ to a Veteran's military service."
      properties:
        medicalInd:
          type: boolean
        beginDate:
          format: date-time
          type: string
        createDate:
          format: date-time
          type: string
        altContentionName:
          example: Alternate Name
          type: string
        completedDate:
          format: date-time
          type: string
        notificationDate:
          format: date-time
          type: string
        contentionTypeCode:
          example: NEW
          type: string
        classificationType:
          example: 1250
          format: int64
          type: integer
        diagnosticTypeCode:
          example: "6100"
          type: string
        claimantText:
          example: tendinitis/bilateral
          type: string
        contentionStatusTypeCode:
          example: C
          type: string
        originalSourceTypeCode:
          example: PHYS
          type: string
        specialIssueCodes:
          example:
          - 38USC1151
          - AOOV
          - ELIGIBILITY
          items:
            description: Special Issue Codes
            type: string
          type: array
        associatedTrackedItems:
          description: Associated tracked items IDs on each contention
          items:
            $ref: '#/components/schemas/TrackedItemAssociationsOnContention'
          type: array
      required:
      - beginDate
      - claimantText
      - classificationType
      - contentionTypeCode
      - medicalInd
      title: Contention
      type: object
    ContentionDetail:
      allOf:
      - $ref: '#/components/schemas/ContentionSummary'
      - $ref: '#/components/schemas/ContentionDetail_allOf'
      description: An object to provide more detailed data for a specific contention.
      title: ContentionDetail
    CreateContentionsResponse:
      allOf:
      - $ref: '#/components/schemas/ProviderResponse'
      - $ref: '#/components/schemas/CreateContentionsResponse_allOf'
      title: CreateContentionResponse
    UpdateContentionsRequest:
      allOf:
      - $ref: '#/components/schemas/ProviderRequest'
      - $ref: '#/components/schemas/UpdateContentionsRequest_allOf'
      title: UpdateContentionsRequest
    UpdateContentionsResponse:
      allOf:
      - $ref: '#/components/schemas/ProviderResponse'
      - type: object
      title: UpdateContentionResponse
    ExistingContention:
      allOf:
      - $ref: '#/components/schemas/Contention'
      - $ref: '#/components/schemas/ExistingContention_allOf'
      title: ExistingContention
    TrackedItemAssociationsOnContention:
      description: The association between a contention and tracked item.
      properties:
        trackedItemId:
          example: 5678
          format: int64
          type: integer
      required:
      - trackedItemId
      title: TrackedItemAssociation
      type: object
    ContentionTrackedItemAssociation:
      description: The association between a contention and tracked item.
      properties:
        contentionId:
          example: 71773
          format: int64
          type: integer
        trackedItemId:
          example: 5678
          format: int64
          type: integer
      required:
      - contentionId
      - trackedItemId
      title: ContentionTrackedItemAssociation
      type: object
    UpdateContentionLifecycleStatusRequest:
      allOf:
      - $ref: '#/components/schemas/ProviderRequest'
      - $ref: '#/components/schemas/UpdateContentionLifecycleStatusRequest_allOf'
      description: Request to update contention lifecycle status.
      example:
        contentions:
        - contentionId: 71773
          lifecycleStatus: Open
          details: Changing the lifecycle status to open
        - contentionId: 82884
          lifecycleStatus: Open
      title: UpdateContentionLifecycleStatusRequest
    UpdateContentionLifecycleStatusRequestItem:
      properties:
        contentionId:
          description: The contention ID from CorpDB the event or action is taken
            on.
          example: 71773
          format: int64
          type: integer
        lifecycleStatus:
          description: "The lifecycle status of the contention. See [/contentions/lifecycle_status](#/lookup/getContentionLifecycleStatuses)\
            \ for valid values. The value for code or description can be used."
          example: Open
          type: string
        details:
          description: User provided details of the action. A maximum of 400 characters
            is allowed.
          type: string
      title: UpdateContentionLifecycleStatusRequestItem
      type: object
    UpdateContentionAutomationStatusRequest:
      allOf:
      - $ref: '#/components/schemas/ProviderRequest'
      - $ref: '#/components/schemas/UpdateContentionAutomationStatusRequest_allOf'
      description: Request to update contention automation status.
      example:
        contentions:
        - contentionId: 71773
          automationIndicator: true
          details: Updated the automation status.
        - contentionId: 82884
          automationIndicator: true
      title: UpdateContentionAutomationStatusRequest
    UpdateContentionAutomationStatusRequestItem:
      properties:
        contentionId:
          description: The contention ID from CorpDB the event or action is taken
            on.
          example: 71773
          format: int64
          type: integer
        automationIndicator:
          description: The automation status of the contention.
          type: boolean
        details:
          description: User provided details of the action. A maximum of 400 characters
            is allowed.
          type: string
      required:
      - automationIndicator
      title: UpdateContentionAutomationStatusRequestItem
      type: object
    UpdateClaimRequest:
      allOf:
      - $ref: '#/components/schemas/ProviderRequest'
      - $ref: '#/components/schemas/UpdateClaimRequest_allOf'
      deprecated: true
      title: UpdateClaimRequest
    UpdateClaimResponse:
      allOf:
      - $ref: '#/components/schemas/ProviderResponse'
      deprecated: true
      title: UpdateClaimResponse
    UpdateClaimLifecycleStatusRequest:
      allOf:
      - $ref: '#/components/schemas/ProviderRequest'
      - $ref: '#/components/schemas/UpdateClaimLifecycleStatusRequest_allOf'
      title: UpdateClaimLifecycleStatusRequest
    UpdateClaimLifecycleStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ProviderResponse'
      title: UpdateClaimLifecycleStatusResponse
    Claimant:
      description: "A person making a claim, which could be the Veteran, one of their\
        \ dependents, or an organization acting on behalf of the Veteran."
      properties:
        participantId:
          description: The CorpDB Participant ID. The Claims API assumes the caller
            will have obtained this value from MVI.
          example: 307405
          format: int64
          maximum: 999999999999999
          type: integer
      required:
      - participantId
      title: Claimant
      type: object
    PhaseType:
      description: The PhaseType is the status value that used to populate the EVSS
        ClaimStatus
      enum:
      - Claim Received
      - Under Review
      - Gathering of Evidence
      - Review of Evidence
      - Preparation for Decision
      - Pending Decision Approval
      - Preparation for Notification
      - Complete
      title: PhaseType
      type: string
    Veteran:
      description: The minimal information to reference a Veteran in CorpDB.
      properties:
        participantId:
          description: The CorpDB Participant ID. The Claims API assumes the caller
            will have obtained this value from MVI.
          example: 320848
          format: int64
          maximum: 999999999999999
          type: integer
        firstName:
          example: RALPH
          type: string
        lastName:
          example: HONEYMOONER
          type: string
      required:
      - firstName
      - lastName
      - participantId
      title: Veteran
      type: object
    FeatureFlag:
      description: "Holds name and boolean status of a feature flag, as found in bip-vetservices-claims.yml"
      properties:
        featureFlagName:
          type: string
        featureFlagStatus:
          type: boolean
      title: FeatureFlag
      type: object
    AppToken:
      description: test
      properties:
        userId:
          type: string
        userKey:
          type: string
        applicationName:
          type: string
        stationOfJurisdiction:
          type: string
        isExternal:
          type: boolean
      required:
      - userId
      - userKey
      title: AppToken
      type: object
    Message:
      description: Model that identifies a single individual used in the security
        context
      example:
        severity: severity
        text: text
        key: key
        status: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        key:
          type: string
        severity:
          type: string
        status:
          format: int32
          type: integer
        text:
          type: string
        timestamp:
          format: date-time
          type: string
      required:
      - key
      - severity
      title: Message
      type: object
    Person:
      description: Model that identifies a single individual used in the security
        context
      example:
        lastName: DOE
        gender: gender
        prefix: prefix
        appToken: appToken
        assuranceLevel: 2
        suffix: suffix
        birthDate: 2000-01-23
        userID: BIPCLAIMSYSACCT
        firstName: JANE
        correlationIds:
        - 77779102^NI^200M^USVHA^P
        - 912444689^PI^200BRLS^USVBA^A
        - 6666345^PI^200CORP^USVBA^A
        - 1105051936^NI^200DOD^USDOD^A
        - 912444689^SS
        middleName: middleName
        applicationID: BIPCLAIMSAPI
        email: jane.doe@va.gov
        stationID: "281"
      properties:
        assuranceLevel:
          description: The person's access assurance level
          example: 2
          format: int32
          minimum: 0
          type: integer
        birthDate:
          description: The person's birth date
          format: date
          type: string
        correlationIds:
          description: The MVI correlation IDs list for the person
          example:
          - 77779102^NI^200M^USVHA^P
          - 912444689^PI^200BRLS^USVBA^A
          - 6666345^PI^200CORP^USVBA^A
          - 1105051936^NI^200DOD^USDOD^A
          - 912444689^SS
          items:
            type: string
          type: array
        email:
          description: The person's email address
          example: jane.doe@va.gov
          type: string
        firstName:
          description: The person's first name
          example: JANE
          type: string
        gender:
          description: The person's gender
          type: string
        lastName:
          description: The person's last name
          example: DOE
          type: string
        middleName:
          description: The person's middle name
          type: string
        prefix:
          description: The prefix for the person's full name
          type: string
        suffix:
          description: The suffix for the person's full name
          type: string
        applicationID:
          description: The application taking action on the record
          example: BIPCLAIMSAPI
          type: string
        stationID:
          description: The number representing the Regional Office of the person or
            service taking action on the record
          example: "281"
          type: string
        userID:
          description: The name associated with the person or service taking action
            on the record
          example: BIPCLAIMSYSACCT
          type: string
        appToken:
          deprecated: true
          description: Auditing and authentication credentials
          format: json
          type: string
      title: Person
      type: object
    ProviderResponse:
      $ref: '#/components/schemas/provider_response'
    ProviderRequest:
      $ref: '#/components/schemas/provider_request'
    provider_request:
      title: ProviderRequest
      type: object
    provider_response:
      example:
        messages:
        - severity: severity
          text: text
          key: key
          status: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
        - severity: severity
          text: text
          key: key
          status: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        messages:
          items:
            $ref: '#/components/schemas/message'
          type: array
      title: ProviderResponse
      type: object
    message:
      description: Model that identifies a single individual used in the security
        context
      example:
        severity: severity
        text: text
        key: key
        status: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        key:
          type: string
        severity:
          type: string
        status:
          format: int32
          type: integer
        text:
          type: string
        timestamp:
          format: date-time
          type: string
      required:
      - key
      - severity
      title: Message
      type: object
    benefit_claim_type:
      description: "The object used to specify a claim type. This object gives a higher\
        \ level of granularity to claim types, especially when there are only 9 modifiers.\
        \ Using this object will remove the need to specify EP code or label in separate\
        \ fields. The values reflected in this object reflect the values that go into\
        \ the m21-4 manuals, the authoritative specifications for claims."
      properties:
        name:
          description: The name of the BeneifitClaimType.
          type: string
        code:
          type: string
        description:
          type: string
        deactiveDate:
          description: "Date indicating when this item is deactivated and is no longer\
            \ valid, or an empty value."
          format: date-time
          type: string
        attribute_one:
          description: An additional discriminator key name to give further resolution
            on a 3-digit code. The value is typically "CLAIM_TYPE_LABEL"
          type: string
        attribute_one_text:
          description: "The value of the attribute_one key. For example, it could\
            \ be \"Work Item\", \"Compensation\", \"Predetermination\", etc"
          type: string
        attribute_two:
          description: A second field attribute key name. This value is typically
            "USER_DISPLAY"
          type: string
        attribute_two_text:
          description: The value of the attribute_two key.
          type: string
        attribute_three:
          description: A third field attribute key name. It usually relates to whether
            the BenefitClaimType is Ratings
          type: string
        attribute_three_text:
          description: The value of the attribute_three key.
          type: string
      title: BenefitClaimType
      type: object
    contention_history:
      description: The list of contentions
      properties:
        action:
          description: The action this history item captures.
          example: Updated Status Contention
          type: string
        actionResult:
          description: Whether or not the action was completed successfully.
          example: Successful
          type: string
        actorUserId:
          description: The user that took this action against the contention.
          example: BIPCLAIMSYSACCT
          type: string
        actorApplicationId:
          description: The application ID from which the user took this action against
            the contention.
          example: BIPCLAIMSAPI
          type: string
        actorStationId:
          description: The station ID of the user that took this action against the
            contention.
          example: "281"
          type: string
        automationIndicator:
          description: Indicator if the contention has been automated.
          example: true
          type: boolean
        benefitClaimTypeCode:
          description: The benefit claim type code.
          example: 160SCBPMC
          type: string
        claimId:
          description: The CorpDB BNFT_CLAIM_ID.
          example: 9666422
          format: int64
          type: integer
        contentionClassificationName:
          description: A detailed description of the classification term as defined
            by the VBA medical specialists.
          example: NEW
          type: string
        contentionId:
          description: The contention ID from CorpDB the event or action is taken
            on.
          example: 71773
          format: int64
          type: integer
        contentionStatusTypeCode:
          description: Status of a contention as recorded in CorpDB. The contention’s
            lifecycle status provides more detail.
          example: C
          type: string
        contentionTypeCode:
          description: A code representing the type of contention.
          example: NEW
          type: string
        lifecycleStatus:
          description: The lifecycle status of the contention captured at the time
            this action was taken.
          example: Closed
          type: string
        details:
          description: User provided description of this contention event.
          example: Automation completed
          type: string
        diagnosticTypeCode:
          description: Represents the proper medical diagnosis that has been assigned
            to previously rated contentions.
          example: "9411"
          type: string
        eventTime:
          description: The time the action against the contention occurred.
          format: date-time
          type: string
        triggeringEventTime:
          description: The time of the event that triggered this action against the
            contention.
          format: date-time
          type: string
        completedDate:
          description: Represents the date in which the contention was promulgated.
          format: date-time
          type: string
        claimantText:
          description: A description of the contention in the words of the claimant.
          example: PTSD
          type: string
        source:
          description: Source of a contention history or application that caused the
            change
          example: CLAIMS_API
          type: string
        lifecycleStatusChangeRequested:
          description: Whether or not the contention's lifecycle status was explicitly
            set during this event.
          example: true
          type: boolean
      title: ContentionHistory
      type: object
    ClaimDetailResponse_allOf:
      properties:
        claim:
          $ref: '#/components/schemas/ClaimDetail'
      type: object
      example: null
    ClaimDetail_allOf:
      properties:
        tempStationOfJurisdiction:
          description: Represents the Regional Office (RO) where the claim is currently
            being worked if different from the establishing RO
          type: string
        claimStationOfJurisdiction:
          description: Represents the Regional Office (RO) where the claim currently
            is assigned
          type: string
        awardStationOfJurisdiction:
          description: Represents the Regional Office (RO) responsible for processing
            maintenance awards for the veteran or claimant
          type: string
        suspense:
          $ref: '#/components/schemas/Suspense'
        suspenseReasonCode:
          deprecated: true
          description: The suspense reason code.
          example: "024"
          type: string
        suspenseDate:
          deprecated: true
          description: The date the claim was suspended.
          format: date-time
          type: string
        suspenseComment:
          deprecated: true
          example: Suspense Comment Example
          type: string
        waiverSubmitted:
          type: boolean
        limitedPoa:
          $ref: '#/components/schemas/LimitedPoa'
        establishedDate:
          description: Date of the first lifecycle status change for the claim.
          format: date-time
          type: string
      type: object
      example: null
    ClaimLifecycleStatusesResponse_allOf:
      properties:
        lifecycleStatuses:
          items:
            $ref: '#/components/schemas/Lifecycle'
          type: array
      type: object
      example: null
    ContentionSummariesResponse_allOf:
      properties:
        contentions:
          items:
            $ref: '#/components/schemas/ContentionSummary'
          type: array
      type: object
      example: null
    CreateContentionsRequest_allOf:
      properties:
        createContentions:
          items:
            $ref: '#/components/schemas/Contention'
          type: array
      required:
      - claimId
      - createContentions
      type: object
      example: null
    ContentionSummary_allOf:
      properties:
        summaryDateTime:
          format: date-time
          type: string
      type: object
      example: null
    ContentionDetail_allOf:
      properties:
        contentionHistory:
          items:
            $ref: '#/components/schemas/contention_history'
          type: array
      type: object
      example: null
    CreateContentionsResponse_allOf:
      properties:
        contentionIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
      example: null
    UpdateContentionsRequest_allOf:
      properties:
        updateContentions:
          items:
            $ref: '#/components/schemas/ExistingContention'
          type: array
      type: object
      example: null
    ExistingContention_allOf:
      properties:
        contentionId:
          example: 5261
          format: int64
          type: integer
        lastModified:
          description: "Last modified time for the contention being updated. If this\
            \ does not match, the update will be rejected."
          format: date-time
          type: string
        lifecycleStatus:
          description: Current status of the contention
          example: Ready for Decision
          type: string
        action:
          description: Action taken on contention.
          example: Updated Contention
          type: string
        automationIndicator:
          description: Indicator if the contention has been automated
          type: boolean
      required:
      - contentionId
      - lastModified
      type: object
      example: null
    UpdateContentionLifecycleStatusRequest_allOf:
      properties:
        contentions:
          items:
            $ref: '#/components/schemas/UpdateContentionLifecycleStatusRequestItem'
          minItems: 1
          type: array
      required:
      - contentions
      type: object
      example: null
    UpdateContentionAutomationStatusRequest_allOf:
      properties:
        contentions:
          items:
            $ref: '#/components/schemas/UpdateContentionAutomationStatusRequestItem'
          minItems: 1
          type: array
      required:
      - contentions
      type: object
      example: null
    UpdateClaimRequest_allOf:
      properties:
        suspenseReasonCode:
          example: "024"
          type: string
        suspenseDate:
          format: date-time
          type: string
        commentText:
          example: Adding custom text
          type: string
      type: object
      example: null
    UpdateClaimLifecycleStatusRequest_allOf:
      properties:
        claimLifecycleStatus:
          example: Rating Decision Complete
          type: string
      type: object
      example: null
  securitySchemes:
    Authorization:
      in: header
      name: Authorization
      type: apiKey
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
