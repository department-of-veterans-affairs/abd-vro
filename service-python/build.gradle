import ru.vyarus.gradle.plugin.python.task.PythonTask

plugins {
  id('ru.vyarus.use-python') version "3.0.0"
}

python {
  installVirtualenv = false
  docker.use = true
  docker.image = 'python:latest'
}

pipInstall {
  // Requirements are installed below because this task does not support
  // `-r assessclaimdc6602/src/requirements.txt` in requirements.txt
  enabled = false
}

def requirements = tasks.register("requirements", PythonTask) {
  module = 'pip'
  command = "install -r service-python/requirements.txt"
}

def pyisort = tasks.register("pyisort", PythonTask) {
  module = 'isort'
  command = ". --check --skip tests --skip .venv"
  dependsOn requirements
}

def pyflake8 = tasks.register("pyflake8", PythonTask) {
  module = 'flake8'
  command = "."
  dependsOn pyisort
}

// Runs pytest when `./gradlew test` is run
// Also skips pytest when `./gradlew build -x test` is run
tasks.register("test", PythonTask) {
  module = 'pytest'
  command = "service-python --cov-report term-missing --cov=. --cov-fail-under=80 --cov-config=./.coveragerc"
  dependsOn pyflake8
}

check {
  dependsOn checkPython
  dependsOn test
}

clean.dependsOn(cleanPython)
